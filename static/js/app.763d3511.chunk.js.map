{"version":3,"sources":["src/helpers/SetFontType.js","src/components/TextBody.js","src/components/InformationView.js","src/components/FormTextInput.js","src/components/TextInputSecure.js","src/components/ButtonPrimary.js","src/components/ButtonText.js","src/components/ButtonIcon.js","src/components/NotificationAlert.js","src/styles/Container.Form.Style.js","src/components/MenuToggleable.js","src/components/MenuToggleableItem.js","src/graphql/graphqlService.js","src/helpers/Constraints.js","src/graphql/queries.js","src/graphql/sessionData.js","src/context/Authentication.js","src/areas/Login.js","src/components/ButtonTab.js","src/graphql/mutations.js","src/areas/Register.js","src/areas/Verify.js","src/areas/ResetPassword.js","src/areas/VerifyResetPassword.js","src/navigators/LoginStackNavigator.js","src/components/TextTitle.js","src/components/BarIconItem.js","src/components/BarIcon.js","src/icons/RatingIcons.js","src/helpers/Converters.js","src/helpers/SetRatingIconColor.js","src/components/ReviewCard.js","src/areas/ViewLocation.js","src/navigators/ProfileStackNavigator.js","src/components/AutocompleteTextInput.js","src/components/Dialog.js","src/areas/AddLocationForm.js","src/navigators/AddLocationStackNavigator.js","src/components/LocationCard.js","src/components/RatingButtonGroup.js","src/components/ElementFilterPlate.js","src/areas/SearchLocations.js","src/components/ButtonCTA.js","src/areas/AddLocation.js","src/areas/Profile.js","src/navigators/MainTabNavigator.js","src/areas/SearchLocationsMap.js","src/areas/AddReviewImage.js","src/areas/AddReview.js","src/areas/Report.js","src/navigators/HomeStackNavigator.js","src/components/LoadingIndicator.js","App.js","web-build/register-service-worker.js"],"names":["setFontTypeSourceSansPro","type","setFontTypeMerriweather","props","useFonts","SourceSansPro_200ExtraLight","SourceSansPro_200ExtraLight_Italic","SourceSansPro_300Light","SourceSansPro_300Light_Italic","SourceSansPro_400Regular","SourceSansPro_400Regular_Italic","SourceSansPro_600SemiBold","SourceSansPro_600SemiBold_Italic","SourceSansPro_700Bold","SourceSansPro_700Bold_Italic","SourceSansPro_900Black","SourceSansPro_900Black_Italic","Text","style","stylesheet","fontFamily","weight","fontSize","color","text","AppLoading","InformationView","View","styleContainer","width","flexDirection","padding","borderRadius","containerBorderRadius","backgroundColor","containerBackgroundColor","justifyContent","alignItems","shadowColor","shadowOffset","height","shadowOpacity","hasShadow","shadowRadius","elevation","marginRight","MaterialCommunityIcons","name","isAlert","iconColor","size","TextBody","textColor","textWeight","FormTextInput","state","constraints","errorText","showErrorText","_validate","undefined","errorJson","validate","single","setState","this","styles","contain","TextInput","multiline","isMultiline","numberOfLines","defaultValue","styleTextInput","textInput","secureTextEntry","secure","placeholder","onChangeText","marginVertical","React","PureComponent","StyleSheet","create","borderWidth","borderColor","marginBottom","TextInputSecure","onIconPress","iconName","textInputSecure","flex","TouchableOpacity","onPress","iconVisibility","textError","Component","borderBottomLeftRadius","borderBottomRightRadius","position","right","marginTop","ButtonPrimary","styleButtonContainer","buttonBorderRadius","buttonPrimaryContainer","paddingLeft","paddingRight","paddingTop","paddingBottom","buttonIcon","ButtonText","hasContainer","buttonTextContainer","defaultProps","ButtonIcon","buttonSize","iconNameAdd","buttonBackgroundColor","zIndex","styleIcon","iconSize","containerMainWidth","NotificationAlert","translateYValue","useRef","Animated","Value","current","alertVisible","useEffect","timing","toValue","translateBy","easing","Easing","elastic","duration","start","left","bottom","alertHeight","alertWidth","marginLeft","transform","translateY","Dimensions","get","containerBody","containerMain","containerTextInputLabels","textLabel","divider","alignSelf","defaultShadow","MenuToggleable","opacityValue","useState","_menuIn","parallel","bezier","opacity","top","onClose","menuItems","MenuToggleableItem","delay","itemDelay","itemIcon","onMenuItemPress","itemText","graphql","body","a","async","headers","fetch","method","JSON","stringify","res","json","graphqlAuth","token","notEmptyCS","presence","allowEmpty","emailCS","email","usernameCS","format","pattern","message","passwordCS","reviewTitleCS","reviewBodyCS","zipcodeCS","createSearchBody","max","fuzzyName","filters","latitude","longitude","distance","variables","locationsModel","paging","value","filter","query","createGetReviewByLocationBody","locationId","reviewsInputModel","createGetLocationAndReviewsByLocationBody","createGetReviewsByUserIdBody","userId","userReviewsInputModel","getUserAuth","AsyncStorage","getItem","getUserId","getUserEmail","AuthContext","createContext","loginFetch","id","password","usernameOrEmail","loginModel","emailOrUsername","createLoginBody","containerTitleWidth","trdWidth","LoginArea","navigation","isLoading","setIsLoading","onChangeId","onChangePassword","login","useContext","menuVisible","menuToggle","isError","errorToggle","Linking","getInitialURL","then","data","parse","path","queryParams","set","includes","push","containerTitle","justifySelf","containerBtnLogin","result","error","multiSet","username","containerRegister","choseStyle","containerLabel","containerMenu","labelLogin","fontWeight","letterSpacing","labelFern","ButtonTab","styleButton","borderTopLeftRadius","rightTab","borderTopRightRadius","leftTab","createRegistrationBody","accepted","userModel","RegisterArea","onChangeEmail","onChangeUsername","isSelected","setSelection","checkboxError","checkboxErrorToggle","accountCreationError","accountCreationErrorToggle","goBack","CheckBox","onValueChange","Alert","alert","setTimeout","verify","verificationCode","verificationModel","createVerificationBody","VerifyArea","params","route","userEmail","onChangeverificationCode","ResetPasswordArea","createPasswordResetEmailBody","sendEmail","verifyPasswordReset","passwordResetModel","createPasswordResetVerificationBody","VerifyResetPasswordArea","Stack","createStackNavigator","LoginNavigator","Navigator","headerMode","Screen","component","Merriweather_300Light","Merriweather_300Light_Italic","Merriweather_400Regular","Merriweather_400Regular_Italic","Merriweather_700Bold","Merriweather_700Bold_Italic","Merriweather_900Black","Merriweather_900Black_Italic","BarIconItem","containerOrientation","alignLabel","iconLabel","labelColor","iconBorderWidth","iconBorderColor","iconBorderRadius","BarIcon","_createBarIconItem","itemProps","hasSpacer","iconNames","iconColors","iconLabels","ratingSpacers","_createBarIconItemGroup","itemGroup","i","item","console","log","barIconProps","containerRatings","ratingsReverse","ratings","wifiIcons","wifiValues","noiseIcons","noiseValues","seatingIcons","seatingValues","outletsIcons","outletsValues","filtersReverse","wifiFilterIcons","wifiFilterValues","noiseFilterIcons","noiseFilterValues","seatingFilterIcons","seatingFilterValues","outletsFilterIcons","outletsFilterValues","noRatingIcon","wifiRatingConverter","ratingValue","noiseRatingCoverter","seatingRatingConverter","outletRatingConverter","distanceConverter","distanceRaw","numOfDec","Number","Math","round","setRatingIconColor","imageSize","ReviewCard","index","imageIndexPressed","activeSlide","showReviewImages","_renderItem","Image","source","uri","_toggleShowReviewImages","itemIndex","_createTopReviewHalf","review","TextTitle","title","wifi","noise","seating","outlets","_createImageSection","containerThumbnails","imageUris","thumbnail","ModalComponent","Modal","isVisible","onBackdropPress","backdropStyle","overlayStyle","layout","ref","c","_carousel","renderItem","sliderWidth","itemWidth","firstItem","onSnapToItem","enableSnap","enableMomentum","pagination","_createLowerReviewHalf","dateCreated","substring","lowerRowContainer","moreInfoContainer","_createNewReview","hasImages","marginHorizontal","margin","containerMainAlt","length","dotsLength","activeDotIndex","containerStyle","dotStyle","inactiveDotStyle","inactiveDotOpacity","inactiveDotScale","btnCloseOverlay","display","displayImageWidth","displayImageHeight","displayImageMarginTop","containerInfoWidth","containerInfoPadding","hlfHeight","isDesktop","ViewLocationArea","location","reachedEnd","enableScrollViewScroll","fadeIn","_fetchLocation","getLocationById","_updateReviewsState","getReviewsByLocationId","_fetchReviews","reviewsModal","reviews","prevState","nextProps","stop","_handleLoadMore","_addReview","locationName","navigate","_reportLocation","_getDirections","url","openURL","catch","_createControlPanel","encodeURI","_createMainDesktopBody","SafeAreaView","styleDesktop","containerDisplayImage","imageUri","displayImage","resizeMode","FlatList","ListHeaderComponent","containerLocationInfo","containerAddress","streetAddress","city","zipCode","wifiRating","noiseRating","seatingRating","outletsRating","containerReviewFlatListLabel","ListFooterComponent","listFooter","containerFlatList","keyExtractor","onEndReached","onEndReachedThreshold","initialNumToRender","containerFloatingButtons","_createMainMobileBody","containerListHeader","AutocompleteTextInput","hideResults","filteredData","_onChangeValue","_filterData","_onChangeValueClick","regex","RegExp","trim","search","container","autoCorrect","Dialog","onDeny","titleColor","titleWeight","buttonDenyText","buttonConfirmText","onConfirm","addLocation","streetAdress","locationInputModel","createAddLocationBody","AddLocationFormArea","onChangeName","onChangeStreetAdress","onChangeCity","onChangeState","onChangeZipCodes","confirmGoBack","setConfirmGoBack","states","LocationCard","useMemo","TouchableWithoutFeedback","containerCard","containerDistanceFrom","containerDetails","cardSize","min","paddingHorizontal","rating","RatingButtonGroup","_onPress","selectedIndex","selected","_createButtonGroup","icons","buttons","forEach","element","containerWidth","selectedButtonStyle","innerBorderStyle","ElementFilterPlate","_onChange","onChange","_setWifi","_createSelection","_setNoise","_setSeating","_setOutlets","operation","containerPlate","containerTextLabel","containerBtn","SearchLocationsArea","isRefreshing","showFilterPlate","_viewLocation","_viewMap","_setFuzzyName","_setFilters","_toggleShowFilterPlate","_fetchLocations","getLocationNearByElastic","locations","_refreshLocations","_getUserPermissions","status","_getUserLocation","Permissions","navigator","geolocation","getCurrentPosition","coords","enableHighAccuracy","timeout","maximumAge","removeClippedSubviews","getItemLayout","offset","refreshControl","RefreshControl","refreshing","onRefresh","bind","windowSize","containerButtonFloatingLeft","listHeader","AddLocationArea","_addLocationForm","textAlign","containerMainHorizontalMargins","ProfileArea","confirmLogOut","_populateUserInformation","userIdFromSession","_getUserReviews","reviewsModel","getReviewsByUserId","context","logout","contextType","tabNavMargins","Tab","createBottomTabNavigator","MainNavigator","tabBarStyle","border","initialRouteName","tabBarOptions","showLabel","keyboardHidesTabBar","options","tabBarIcon","focused","unmountOnBlur","SearchLocationsMapArea","popup","zoom","isClickableTimeout","isClickable","_toggleIsClickable","_updateLocation","viewport","center","_handleZoom","_closePopup","_handleDrag","leafletElement","leaflet","map","closePopup","_viewList","_createMarker","Marker","key","onClick","createRef","Popup","autoPan","cursor","containerRow","labelDistance","labelLocationName","rel","href","integrity","crossOrigin","Map","zoomControl","onViewportChange","maxZoom","minZoom","TileLayer","attribution","AddReviewImageArea","images","_createImageView","_createAddImage","elevated","_removeImage","card","_pickImage","_getPermissionAsync","Constants","platform","ios","android","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","newImages","_onUpdate","absoluteFillObject","addImage","image","reviewId","formData","FormData","imageBlobMobile","replace","append","imageArray","split","dataTypeArray","imageBlobWeb","Blob","imageAuth","addReview","reviewInputModel","createAddReviewBody","createNewReview","titleFontSize","bodyFontSize","AddReviewArea","onChangeNoise","onChangeWifi","onChangeSeating","onChangeOutlets","onChangeTitle","onChangeReview","onChangeImages","ScrollView","reportLocation","reason","reportModel","createReportLocationBody","reportReview","createReportReviewBody","ReportLocationArea","onChangeReason","ReportReviewArea","HomeStack","HomeNavigator","LoadingIndicator","ActivityIndicator","prefix","makeUrl","App","getInitialState","useLinking","prefixes","isReady","setIsReady","initialState","action","userToken","dispatch","authContext","removeItem","Provider","NavigationContainer","linking","fallback","window","addEventListener","serviceWorker","register","scope","info"],"mappings":"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","file":"static/js/app.763d3511.chunk.js","sourcesContent":["\r\nexport function setFontTypeSourceSansPro(type){\r\n    switch (type) {\r\n        case 'black':\r\n            return 'SourceSansPro_900Black';\r\n        case 'bold':\r\n            return 'SourceSansPro_700Bold';\r\n        case 'semiBold':\r\n            return 'SourceSansPro_600SemiBold';\r\n        case 'light':\r\n            return 'SourceSansPro_300Light';\r\n        case 'extraLight':\r\n            return 'SourceSansPro_200ExtraLight';\r\n        default:\r\n            return 'SourceSansPro_400Regular';\r\n    }\r\n};\r\n\r\nexport function setFontTypeMerriweather(type){\r\n    switch (type) {\r\n        case 'black':\r\n            return 'Merriweather_900Black';\r\n        case 'bold':\r\n            return 'Merriweather_700Bold';\r\n        case 'light':\r\n            return 'Merriweather_300Light';\r\n        default:\r\n            return 'Merriweather_400Regular';\r\n    }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Text, View} from 'react-native';\r\n\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nimport { setFontTypeSourceSansPro } from '../helpers/SetFontType'\r\nimport { AppLoading } from 'expo';\r\nimport {\r\n  useFonts,\r\n  SourceSansPro_200ExtraLight,\r\n  SourceSansPro_200ExtraLight_Italic,\r\n  SourceSansPro_300Light,\r\n  SourceSansPro_300Light_Italic,\r\n  SourceSansPro_400Regular,\r\n  SourceSansPro_400Regular_Italic,\r\n  SourceSansPro_600SemiBold,\r\n  SourceSansPro_600SemiBold_Italic,\r\n  SourceSansPro_700Bold,\r\n  SourceSansPro_700Bold_Italic,\r\n  SourceSansPro_900Black,\r\n  SourceSansPro_900Black_Italic \r\n} from '@expo-google-fonts/source-sans-pro';\r\n\r\nexport default (props) => {\r\n  let [fontsLoaded] = useFonts({\r\n    SourceSansPro_200ExtraLight,\r\n    SourceSansPro_200ExtraLight_Italic,\r\n    SourceSansPro_300Light,\r\n    SourceSansPro_300Light_Italic,\r\n    SourceSansPro_400Regular,\r\n    SourceSansPro_400Regular_Italic,\r\n    SourceSansPro_600SemiBold,\r\n    SourceSansPro_600SemiBold_Italic,\r\n    SourceSansPro_700Bold,\r\n    SourceSansPro_700Bold_Italic,\r\n    SourceSansPro_900Black,\r\n    SourceSansPro_900Black_Italic \r\n  });\r\n\r\n    if (!fontsLoaded) {\r\n        return <AppLoading />;\r\n    } else {\r\n        return (\r\n                <Text style={[props.stylesheet,{\r\n                  ...props.style,\r\n                  fontFamily: setFontTypeSourceSansPro(props.weight), \r\n                  fontSize: props.fontSize, \r\n                  color: props.color}]}>\r\n                {props.text}\r\n                </Text>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\r\nimport {View} from 'react-native'; \r\n\r\nimport { default as TextBody} from '../components/TextBody';\r\nimport {MaterialCommunityIcons} from '@expo/vector-icons'; \r\n\r\nexport function InformationView(props){\r\n\r\n    return (\r\n        <View style={{\r\n        ...props.styleContainer,\r\n        width: '100%',\r\n        flexDirection: 'row',        \r\n        padding: 12,\r\n        borderRadius: (props.containerBorderRadius != null) ? props.containerBorderRadius : 8,\r\n        backgroundColor: (props.containerBackgroundColor != null) ? props.containerBackgroundColor : '#222',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        shadowColor: \"#222222\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 3,\r\n        },\r\n        shadowOpacity: props.hasShadow ? 0.29 : 0.0,\r\n        shadowRadius: props.hasShadow ? 4.65 : 0,\r\n        elevation: props.hasShadow ? 4 : 0, \r\n        }}>\r\n            <View style={{height: 32, width: 32, marginRight:12, justifyContent: 'center', alignItems:'center', backgroundColor:'rgba(255, 255, 255, 0.5)', borderRadius:1000}}>\r\n            <MaterialCommunityIcons\r\n            name={props.isAlert ? 'alert-circle-outline' : 'information-outline'}\r\n            color={(props.iconColor != null) ? props.iconColor : '#222'}\r\n            size={24}\r\n            />\r\n            </View>\r\n            <TextBody text={props.text} color={(props.textColor != null) ? props.textColor : '#FFF'} weight={(props.textWeight != null) ? props.textWeight : 'regular'}/>\r\n        </View>\r\n    );\r\n}","import React from 'react';\r\nimport {TextInput, StyleSheet, View} from 'react-native';\r\n\r\nimport {default as TextBody} from './TextBody';\r\nimport {InformationView} from './InformationView';\r\n \r\nimport validate from 'validate.js';\r\n\r\nimport {MaterialCommunityIcons} from '@expo/vector-icons';  \r\n\r\n\r\nexport class FormTextInput extends React.PureComponent {\r\n    state = {\r\n        constraints: null,\r\n        errorText: '',\r\n        showErrorText: false,\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            constraints: this.props.constraints,\r\n        });\r\n    }\r\n\r\n    _validate = (text) => {\r\n        if(this.state.constraints !== undefined && this.state.constraints !== null){\r\n            let errorJson = validate.single(text, this.state.constraints);\r\n            if(errorJson === undefined || errorJson === null || errorJson === ''){\r\n                this.setState({\r\n                    showErrorText: false,\r\n                    errorText: ''\r\n                });    \r\n                return;\r\n            }\r\n            this.setState({\r\n                showErrorText: true,\r\n                errorText: errorJson[0]\r\n            });\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <View style={styles.contain}>\r\n                <TextInput \r\n                    multiline={this.props.isMultiline? true : false}\r\n                    numberOfLines={this.props.isMultiline? this.props.numberOfLines : 1}     \r\n                    defaultValue={this.props.defaultValue}\r\n                    style={[{...this.props.styleTextInput,height:(this.props.isMultiline) ? 'auto' : 30},styles.textInput]}\r\n                    secureTextEntry={this.props.secure}\r\n                    placeholder={this.props.placeholder}\r\n                    onChangeText={(text) => {this.props.onChangeText(text); this._validate(text)}}\r\n                />\r\n                {this.state.showErrorText &&\r\n                    <InformationView isAlert={true} styleContainer={{marginVertical:8}} text={this.state.errorText} containerBackgroundColor={'#E14B1C'} hasShadow={false}/>\r\n                }\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles =  StyleSheet.create({\r\n    textInput: {\r\n        width: '100%',\r\n        padding: 4,\r\n        borderWidth: 1,\r\n        borderColor: '#CCDAE7',\r\n        borderRadius: 4,\r\n        backgroundColor: '#E9F0F6',\r\n    },   \r\n    contain: {\r\n        width: '100%',\r\n        marginBottom: 20,\r\n    }\r\n});\r\n","import React from 'react';\r\nimport {View, TextInput, TouchableOpacity, StyleSheet, Text} from 'react-native'; \r\nimport {MaterialCommunityIcons as Icon} from '@expo/vector-icons';\r\nimport {validate} from 'validate.js';\r\n\r\nexport class TextInputSecure extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            constraints: props.constraints,\r\n            errorText: '',\r\n            showErrorText: false,\r\n            secureTextEntry: true,\r\n            iconName: \"eye\"\r\n        }\r\n    }\r\n\r\n    onIconPress = () => {\r\n        let iconName = (this.state.secureTextEntry) ? \"eye-off\":\"eye\";\r\n\r\n        this.setState({\r\n            secureTextEntry: !this.state.secureTextEntry,\r\n            iconName: iconName\r\n        });\r\n    }\r\n\r\n    _validate = (text) => {\r\n        if(this.state.constraints !== undefined && this.state.constraints !== null){\r\n            let errorJson = validate.single(text, this.state.constraints);\r\n            if(errorJson === undefined || errorJson === null || errorJson === ''){\r\n                this.setState({\r\n                    showErrorText: false,\r\n                    errorText: ''\r\n                });    \r\n                return;\r\n            }\r\n            this.setState({\r\n                showErrorText: true,\r\n                errorText: errorJson[0]\r\n            });\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <View style={styles.contain}>\r\n                <View style={styles.textInputSecure}>\r\n                    <TextInput \r\n                        style = {{flex:1, padding: 4}}\r\n                        secureTextEntry={this.state.secureTextEntry}\r\n                        onChangeText={(text) => {this.props.onChangeText(text); this._validate(text);}}/>\r\n                    <TouchableOpacity onPress={this.onIconPress}>\r\n                        <Icon name={this.state.iconName} style={styles.iconVisibility} size={20} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                {this.state.showErrorText && <Text style={styles.textError} >{this.state.errorText}</Text>}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles =  StyleSheet.create({\r\n    textInputSecure: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        width: '100%',\r\n        borderWidth: 1,\r\n        borderColor: '#CCDAE7',\r\n        borderRadius: 4,\r\n        backgroundColor: '#E9F0F6',\r\n    }, \r\n    contain: {\r\n        width: '100%',\r\n        marginBottom: 20,\r\n    },\r\n    textError: {\r\n        borderBottomLeftRadius: 4,\r\n        borderBottomRightRadius: 4,\r\n        backgroundColor: '#B64C4C',\r\n    },\r\n    iconVisibility: {\r\n        position: 'absolute',\r\n        right: 4,\r\n        marginTop: 1\r\n    }\r\n});","import React from 'react';\r\nimport {View, StyleSheet, TouchableOpacity} from 'react-native'; \r\nimport { default as TextBody} from '../components/TextBody';\r\n\r\nexport function ButtonPrimary(props) {\r\n        return (\r\n            <TouchableOpacity style={{...props.styleContainer}} onPress={props.onPress}>\r\n                <View style={[{...props.styleButtonContainer, \r\n                    borderRadius: (props.buttonBorderRadius != null) ? props.buttonBorderRadius : 4,}, \r\n                    styles.buttonPrimaryContainer]}>\r\n                    <TextBody text={props.text} fontSize={props.fontSize} weight={'semiBold'} color={(props.textColor != null) ? props.textColor : '#FFF'}/>\r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n}\r\n\r\nconst styles =  StyleSheet.create({\r\n    buttonPrimaryContainer: {\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n        backgroundColor: '#222',\r\n    },\r\n    buttonIcon: {\r\n        paddingTop: 3,\r\n        paddingRight: 8,\r\n    }\r\n});","import React from 'react';\r\nimport {View, StyleSheet, TouchableOpacity} from 'react-native'; \r\n\r\nimport TextBody from '../components/TextBody';\r\n\r\nexport function ButtonText(props){\r\n        const {styleContainer,hasContainer,onPress,styleButtonContainer,buttonBorderRadius,text,fontSize,weight,textColor} = props;\r\n        return (\r\n            <TouchableOpacity style={{...styleContainer}} onPress={onPress}>\r\n                <View style={[{...styleButtonContainer, \r\n                    borderRadius: buttonBorderRadius}, (hasContainer)? styles.buttonTextContainer : {}]}>\r\n                    <TextBody text={text} fontSize={fontSize} weight={weight} color={textColor}/>\r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n}\r\n\r\nButtonText.defaultProps = {\r\n    textColor: '#222',\r\n    weight: \"regular\",\r\n    buttonBorderRadius: 4,\r\n}\r\n\r\nconst styles =  StyleSheet.create({\r\n    buttonTextContainer: {\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n        alignItems: 'center',\r\n    }\r\n});","import React from 'react';\r\nimport {View, TouchableOpacity} from 'react-native'; \r\nimport {MaterialCommunityIcons} from '@expo/vector-icons'; \r\n\r\nexport class ButtonIcon extends React.Component {\r\n\r\n    // state = {\r\n    //     iconAdd = (this.props.iconNameAdd != null)\r\n    //   };\r\n\r\n    render(){\r\n        return (\r\n            <TouchableOpacity \r\n            style={{\r\n                ...this.props.styleContainer,\r\n                width: (this.props.buttonSize != null) ? this.props.buttonSize : 32,\r\n                height: (this.props.iconNameAdd != null) ? ((this.props.buttonSize != null) ? this.props.buttonSize : 64) : 32,\r\n                backgroundColor: (this.props.buttonBackgroundColor != null) ? this.props.buttonBackgroundColor : 'transparent',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                borderRadius: (this.props.buttonBorderRadius != null) ? this.props.buttonBorderRadius : 4,\r\n                zIndex: 99\r\n            }}\r\n            onPress={this.props.onPress}>\r\n                <View style={{\r\n                ...this.props.styleIcon,        \r\n                shadowColor: \"#222222\",\r\n                shadowOffset: {\r\n                  width: 0,\r\n                  height: 3,\r\n                },\r\n                shadowOpacity: this.props.hasShadow ? 0.29 : 0.0,\r\n                shadowRadius: this.props.hasShadow ? 4.65 : 0,\r\n                elevation: this.props.hasShadow ? 4 : 0, \r\n                }}>\r\n                    <MaterialCommunityIcons \r\n                    name={this.props.iconNameAdd} \r\n                    size={(this.props.iconNameAdd != null) ? ((this.props.iconSize != null) ? this.props.iconSize : 24) : 0} \r\n                    color={(this.props.iconNameAdd != null) ? ((this.props.iconColor != null) ? this.props.iconColor : \"#222\") : \"#222\"}/>\r\n                    <View style={{\r\n                        width: '60%',\r\n                        height:(this.props.iconNameAdd != null) ? 1 : 0,\r\n                        marginTop: (this.props.iconNameAdd != null) ? 2 : 0, \r\n                        marginBottom: (this.props.iconNameAdd != null) ? 2 : 0,\r\n                        borderRadius: 2,  \r\n                        backgroundColor: \"#CCC\"\r\n                    }}/> \r\n                    <MaterialCommunityIcons \r\n                    name={this.props.iconName} \r\n                    size={(this.props.iconSize != null) ? this.props.iconSize : 24} \r\n                    color={(this.props.iconColor != null) ? this.props.iconColor : \"#222\"}/> \r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}","import React, { useRef, useEffect } from 'react';\r\nimport {Animated, Easing, View, Dimensions, TouchableOpacity} from 'react-native';\r\n\r\nimport {default as TextBody} from '../components/TextBody';\r\nimport { ButtonIcon } from '../components/ButtonIcon';\r\n\r\nimport {MaterialCommunityIcons} from '@expo/vector-icons'; \r\n\r\n\r\nexport const NotificationAlert = (props) => {\r\n    \r\n    const translateYValue = useRef(new Animated.Value(30)).current;\r\n    const opacityValue = useRef(new Animated.Value(0)).current;\r\n    const alertVisible = props.alertVisible; \r\n\r\n    React.useEffect(() => {\r\n        Animated.timing(translateYValue, {\r\n            toValue: (props.translateBy != null) ? -props.translateBy : -38,\r\n            easing: Easing.elastic(1),\r\n            duration: 1000\r\n        }).start();\r\n        // const exit = setTimeout(() => {\r\n        //     Animated.timing(translateYValue, {\r\n        //         toValue: 38,\r\n        //         easing: Easing.elastic(1),\r\n        //         duration: 1000\r\n        //     }).start();\r\n        // }, 3200);\r\n        return () => {\r\n            // clearTimeout(exit);\r\n        }\r\n      }, []);\r\n\r\n    return (\r\n        <Animated.View style={{\r\n        ...props.styleContainer,\r\n        flexDirection: 'row',\r\n        position: 'absolute',\r\n        left: '50%',\r\n        bottom: (props.alertHeight != null) ? -props.alertHeight : -30 , //-30\r\n        width: (props.alertWidth != null) ? props.alertWidth : 320,\r\n        height: (props.alertHeight != null) ? props.alertHeight : 'auto',\r\n        marginLeft: (props.alertWidth != null) ? -props.alertWidth : -160,\r\n        paddingTop: 6,\r\n        paddingBottom: 6,\r\n        paddingLeft: 12,\r\n        paddingRight: 12,\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        borderRadius: (props.borderRadius != null) ? props.buttonBorderRadius : 2,\r\n        backgroundColor: '#222',\r\n        zIndex: 199, \r\n        transform: [{ translateY: translateYValue }] //translateYValue\r\n        }}>\r\n            <TextBody text={props.text} fontSize={12} weight={\"semiBold\"} color={(props.textColor != null) ? props.textColor : '#fff'} />\r\n            <View style={{width:8}}/>\r\n            <ButtonIcon iconName={'close'} iconColor={'#ffffff'} hasShadow={false} iconSize={16} buttonSize={16} onPress={props.onPress} />\r\n        </Animated.View>\r\n    );\r\n}","import { StyleSheet, Dimensions } from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst trdWidth = (width/3);\r\n\r\nlet containerMainWidth;\r\n\r\nfunction choseStyle(width){\r\n  if(width > 1000){\r\n    containerMainWidth = trdWidth\r\n  } else {\r\n    containerMainWidth = width - 40\r\n  }\r\n}\r\n\r\nchoseStyle(width);\r\n\r\nexport default StyleSheet.create({\r\n    containerBody: {\r\n      flex: 1,\r\n      backgroundColor: '#F8F7F0',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    containerMain: {\r\n      flexDirection: 'column',\r\n      width: containerMainWidth,\r\n      padding: 16,\r\n      borderRadius: 4,\r\n      alignItems: 'center',\r\n      backgroundColor: '#fff',\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 3,\r\n      },\r\n      shadowOpacity: 0.29,\r\n      shadowRadius: 4.65,\r\n      elevation: 7,\r\n    },\r\n    containerTextInputLabels: {\r\n      width: '100%',\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n    },\r\n    textLabel: {\r\n      marginRight: 'auto',\r\n      marginBottom: 4,\r\n      fontSize: 12,\r\n      color: '#555555'\r\n    },\r\n    divider: {\r\n      height: 0.1,\r\n      width: '100%',\r\n      marginTop: 8,\r\n      marginBottom: 8,\r\n      alignSelf: 'center',\r\n      backgroundColor: '#dddddd'\r\n    },\r\n    defaultShadow: {\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 3,\r\n      },\r\n      shadowOpacity: 0.29,\r\n      shadowRadius: 4.65,\r\n      elevation: 7,\r\n    },\r\n  });\r\n\r\n","import React,{useRef, useState} from 'react';\r\nimport {Animated, Easing, View, TouchableOpacity} from 'react-native';\r\n\r\nimport {ButtonIcon} from '../components/ButtonIcon';\r\n\r\nimport style from '../styles/Container.Form.Style';\r\n\r\n\r\nexport const MenuToggleable = (props) => {\r\n\r\n    const translateYValue = useRef(new Animated.Value(-10)).current;\r\n    const opacityValue = useRef(new Animated.Value(0)).current;\r\n\r\n    const [menuHeight, setMenuHeight] = useState(0);\r\n    const [menuHidden, menuToggle] = useState(true);\r\n\r\n    React.useEffect(() => {\r\n        _menuIn();\r\n\r\n        return () => {\r\n        }\r\n      }, []);\r\n\r\n      const _menuIn = () => {\r\n        Animated.parallel([\r\n            Animated.timing(translateYValue,{\r\n                  toValue: 0,\r\n                  easing: Easing.bezier(0.645, 0.045, 0.355, 1),\r\n                  duration: 220,\r\n            }),\r\n            Animated.timing(opacityValue,{\r\n                  toValue: 1,\r\n                  duration: 120,\r\n            })\r\n        ]).start()\r\n      };\r\n    \r\n        \r\n        return (\r\n            <View style={{...props.styleContainer, position:'absolute', alignItems: 'center'}}>\r\n            <Animated.View\r\n            style={[style.defaultShadow,{\r\n                padding: 16, \r\n                borderRadius: 4,\r\n                backgroundColor: '#FFF',\r\n                opacity: opacityValue,\r\n                transform:[{translateY:translateYValue}]\r\n                }]}>\r\n                    <ButtonIcon\r\n                    styleContainer={{position:'absolute', top: 0, right: 0, zIndex:99}}\r\n                    iconName={'close'}\r\n                    iconSize={16}\r\n                    hasShadow={false}\r\n                    onPress={props.onClose} />\r\n                    {props.menuItems}\r\n            </Animated.View>\r\n            </View>\r\n        );\r\n}","import React,{useRef, useState} from 'react';\r\nimport {Animated, Easing, View, TouchableOpacity} from 'react-native';\r\n\r\nimport {ButtonText} from '../components/ButtonText';\r\nimport {default as TextBody} from '../components/TextBody';\r\nimport {ButtonIcon} from '../components/ButtonIcon';\r\n\r\nimport { MaterialCommunityIcons} from '@expo/vector-icons'; \r\n\r\n\r\nexport const MenuToggleableItem = (props) => {\r\n    \r\n    const translateYValue = useRef(new Animated.Value(12)).current;\r\n    const opacityValue = useRef(new Animated.Value(0)).current;\r\n\r\n    React.useEffect(() => {\r\n        _menuIn();\r\n\r\n        return () => {\r\n        }\r\n      }, []);\r\n\r\n      const _menuIn = () => {\r\n        Animated.parallel([\r\n            Animated.timing(translateYValue,{\r\n                  toValue: 0,\r\n                  delay: props.itemDelay,\r\n                  easing: Easing.elastic(1),\r\n                  duration: 420,\r\n            }),\r\n            Animated.timing(opacityValue,{\r\n                  toValue: 1,\r\n                  delay: props.itemDelay,\r\n                  duration: 320,\r\n            })\r\n        ]).start()\r\n      };\r\n        \r\n        return (\r\n            <Animated.View style={{\r\n                width:'100%', \r\n                flexDirection:'row',\r\n                opacity: opacityValue,\r\n                transform: [{ translateY: translateYValue }]}}>\r\n                <MaterialCommunityIcons name={props.itemIcon} size={16}/>\r\n                <View style={{width: 8}} />\r\n                    <TouchableOpacity onPress={props.onMenuItemPress}>\r\n                        <TextBody text={props.itemText}/>\r\n                    </TouchableOpacity>\r\n                <View style={{width: 16}} />\r\n            </Animated.View>\r\n        );\r\n}","import Constants from 'expo-constants';\r\n\r\nconst env = 'dev';\r\nconst graphqluri = 'https://' + env + '.fernapp.co/graphql';\r\nconst imageuri = 'https://' + env + '.fernapp.co/images';\r\n\r\nasync function graphql(body){\r\n    var headers = {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n    };\r\n    const res = await fetch(graphqluri, {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify(body)\r\n    });\r\n    return await res.json();\r\n};\r\n\r\nasync function graphqlAuth(token, body){\r\n    var headers = {\r\n        'Authorization': 'Bearer ' + token,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n    };\r\n    headers['Authorization'] = 'Bearer ' + token;\r\n    const res = await fetch(graphqluri, {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify(body)\r\n    });\r\n    return await res.json();\r\n};\r\n\r\nasync function imageAuth(token, image, locationId, reviewId){\r\n    var headers = {\r\n        'Authorization': 'Bearer ' + token,\r\n        'location-id': locationId,\r\n        'review-id': reviewId,\r\n        'Accept': 'application/json'\r\n    };\r\n    var formData = new FormData();\r\n    \r\n    if (!Constants.platform.ios && !Constants.platform.android) {\r\n        var imageArray = image.uri.split(',');\r\n        var dataTypeArray = imageArray[0].split(':');\r\n        var imageBlobWeb = new Blob([imageArray[1]], {type: dataTypeArray[1]}); \r\n        formData.append('file', imageBlobWeb, 'image.jpg');   \r\n    } else {    \r\n        var imageBlobMobile = {\r\n            name: 'image',\r\n            type: 'image/jpeg',\r\n            uri: Constants.platform.android ? image.uri : image.uri.replace(\"file://\", \"\")\r\n        };\r\n        formData.append('file', imageBlobMobile);\r\n    }\r\n    \r\n    const res = await fetch(imageuri, {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: formData\r\n    });\r\n    return await res.json();\r\n};\r\n\r\n\r\nexport {graphql, graphqlAuth, imageAuth};","const notEmptyCS = {\r\n    presence: {allowEmpty: false},\r\n};\r\n\r\nconst emailCS = {    \r\n    presence: {allowEmpty: false},\r\n    email: true\r\n};\r\n\r\nconst usernameCS = {    \r\n    presence: {allowEmpty: false},\r\n    format:{\r\n        pattern: /[a-zA-Z0-9_]*/,\r\n        message: 'A username can only contain a-z, A-Z, 0-9 and _'\r\n    }\r\n};\r\n\r\nconst passwordCS = {\r\n    presence: {allowEmpty: false},\r\n    format:{\r\n        pattern: /((?=.*[a-z])(?=.*[0-9])(?=.*[^a-zA-Z0-9])(?=.*[A-Z]).{8,32})/,\r\n        message: 'A password must contain 1 upper and 1 lower case letter, 1 number, 1 special character, and be at least 8 characters long and at max 32.'\r\n    }\r\n};\r\n\r\nconst reviewTitleCS = {\r\n    presence: {allowEmpty: false},\r\n    format:{\r\n        pattern: /.{4,30}/,\r\n        message: 'A title must be at least 4 characters long and at max 30.'\r\n    }\r\n};\r\n\r\nconst reviewBodyCS = {\r\n    presence: {allowEmpty: false},\r\n    format:{\r\n        pattern: /.{4,280}/,\r\n        message: 'A review must be at least 4 characters long and at max 280.'\r\n    }\r\n};\r\n\r\nconst zipcodeCS = {\r\n    presence: {allowEmpty: false},\r\n    format:{\r\n        pattern: /[0-9]{5}/,\r\n        message: 'A zipcode must only contain 0-9 and be 5 characters long.'\r\n    }\r\n};\r\n\r\nexport {notEmptyCS, emailCS, usernameCS, passwordCS, reviewTitleCS, reviewBodyCS, zipcodeCS};","import { usernameCS } from \"../helpers/Constraints\";\r\n\r\nfunction createLoginBody(usernameOrEmail, password){\r\n    let variables = {\r\n        loginModel: {\r\n            emailOrUsername: usernameOrEmail,\r\n            password: password\r\n        }\r\n    };\r\n    let body = {\r\n        query: 'query ($loginModel: LoginModel!){login(loginModel: $loginModel){token email username}}',\r\n        variables: JSON.stringify(variables)\r\n    };\r\n    return body;\r\n};\r\n\r\nfunction createVerifyAuthenticationBody(){\r\n    let body = {\r\n        query: 'query {verifyAuthentication{success}}'\r\n    };\r\n    return body;\r\n}\r\n\r\nfunction createSearchBody(start, max, fuzzyName, filters, latitude, longitude, distance){\r\n    let variables = {\r\n        locationsModel: {\r\n            paging: {\r\n                start: start,\r\n                max: max\r\n            },\r\n            latitude: latitude,\r\n            longitude: longitude,\r\n            distance: distance\r\n        }\r\n    };\r\n\r\n    if(fuzzyName !== null && fuzzyName !== ''){\r\n        variables.locationsModel['fuzzyFilter'] = {\r\n            value: fuzzyName,\r\n            filter: 'NAME'\r\n        };\r\n    } \r\n\r\n    if(filters !== null){\r\n        variables.locationsModel['filters'] = filters;\r\n    }\r\n\r\n    let body = {\r\n        query: 'query ($locationsModel: LocationsInputModel!){getLocationNearByElastic(locationsModel: $locationsModel) {paging{ start stop } locations{ id name streetAddress city state zipCode latitude longitude totalRatings wifiRating outletsRating noiseRating seatingRating imageUri distance }}}',\r\n        variables: JSON.stringify(variables)\r\n    };\r\n    return body;\r\n};\r\n\r\nfunction createGetReviewByLocationBody(start, max, locationId){\r\n    let variables = {\r\n        reviewsInputModel: {\r\n            paging: {\r\n                start: start,\r\n                max: max\r\n            },\r\n            locationId: locationId\r\n        }\r\n    };\r\n    let body = {\r\n        query: 'query ($reviewsInputModel: ReviewsInputModel!){getReviewsByLocationId(reviewsModel: $reviewsInputModel) {paging{ start stop } reviews{ id userId locationId noise wifi seating outlets title review imageUris dateCreated }}}',\r\n        variables: JSON.stringify(variables)\r\n    };\r\n    return body;\r\n};\r\n\r\nfunction createGetLocationAndReviewsByLocationBody(start, max, locationId){\r\n    let variables = {\r\n        reviewsInputModel: {\r\n            paging: {\r\n                start: start,\r\n                max: max\r\n            },\r\n            locationId: locationId\r\n        }\r\n    };\r\n    let body = {\r\n        query: 'query ($reviewsInputModel: ReviewsInputModel!){' + \r\n            'getReviewsByLocationId(reviewsModel: $reviewsInputModel) {paging{ start stop } reviews{ id userId locationId noise wifi seating outlets title review imageUris dateCreated }}' +\r\n            'getLocationById(id: \\\"'+ locationId +'\\\") {id name streetAddress city state zipCode latitude longitude totalRatings wifiRating outletsRating noiseRating seatingRating imageUri distance}' +\r\n            '}',\r\n        variables: JSON.stringify(variables)\r\n    };\r\n    return body;\r\n};\r\n\r\nfunction createIsEmailAvailableBody(email){\r\n    let body = {\r\n        query: 'query {isEmailAvailable(email: \\\"' + email + '\\\") {sucess}}'\r\n    };\r\n    return body;\r\n};\r\n\r\nfunction createIsUsernameAvailbleBody(username){\r\n    let body = {\r\n        query: 'query {isUsernameAvailable(email: \\\"' + username + '\\\") {sucess}}'\r\n    };\r\n    return body;\r\n};\r\n\r\nfunction creatGetLocationByIdBody(locationId){\r\n    let body = {\r\n        query: 'query {getLocationById(id: \\\"'+ locationId +'\\\") {id name streetAddress city state zipCode latitude longitude totalRatings wifiRating outletsRating noiseRating seatingRating imageUri distance}}'\r\n    };\r\n    return body;\r\n}\r\n\r\nfunction createGetReviewsByUserIdBody(start, max, userId){\r\n    let variables = {\r\n        userReviewsInputModel: {\r\n            paging: {\r\n                start: start,\r\n                max: max\r\n            },\r\n            userId: userId\r\n        }\r\n    };\r\n    let body = {\r\n        query: 'query ($userReviewsInputModel: UserReviewsInputModel!){getReviewsByUserId(userReviewsModel: $userReviewsInputModel) {paging{ start stop } reviews{ id userId locationId noise wifi seating outlets title review imageUris dateCreated }}}',\r\n        variables: JSON.stringify(variables)\r\n    };\r\n    return body;\r\n}\r\n\r\nexport {createLoginBody, createIsEmailAvailableBody, createIsUsernameAvailbleBody, createVerifyAuthenticationBody, createSearchBody, createGetReviewByLocationBody, creatGetLocationByIdBody, createGetReviewsByUserIdBody, createGetLocationAndReviewsByLocationBody};","import { AsyncStorage } from 'react-native';\r\n\r\nasync function getUserAuth(){\r\n    return await AsyncStorage.getItem('fernToken');\r\n}\r\n\r\nasync function getUserId(){\r\n    return await AsyncStorage.getItem('fernUserId');\r\n}\r\n\r\nasync function getUserEmail(){\r\n    return await AsyncStorage.getItem('fernEmail');\r\n}\r\n\r\nasync function setUserAuth(data){\r\n    await AsyncStorage.multiSet(\r\n        [['fernToken', data.login.token], \r\n        ['fernUserId', data.login.username], \r\n        ['fernEmail', data.login.email]], null);\r\n}\r\n\r\nasync function removeUserAuth(){\r\n    await AsyncStorage.removeItem('fernToken');\r\n}\r\n\r\nasync function getLatLng(){\r\n    return await AsyncStorage.getItem('fernCoords');\r\n}\r\n\r\nasync function setLatLng(position) {    \r\n    await AsyncStorage.setItem('fernCoords', position.coords);\r\n}\r\n\r\nexport {setUserAuth, getUserAuth, getUserId, getUserEmail, removeUserAuth, getLatLng, setLatLng}\r\n","import React from 'react';\r\n\r\nexport const AuthContext = React.createContext();","import React,{useRef, useContext, useEffect, useState} from 'react';\r\nimport {Easing, View, StyleSheet, Dimensions} from 'react-native';\r\n\r\nimport {FormTextInput} from '../components/FormTextInput';\r\nimport {TextInputSecure} from '../components/TextInputSecure';\r\nimport {ButtonPrimary} from '../components/ButtonPrimary';\r\nimport { default as TextBody} from '../components/TextBody';\r\nimport {ButtonText} from '../components/ButtonText';\r\nimport {ButtonIcon} from '../components/ButtonIcon';\r\nimport {NotificationAlert} from '../components/NotificationAlert';\r\nimport {MenuToggleable} from '../components/MenuToggleable';\r\nimport {MenuToggleableItem} from '../components/MenuToggleableItem';\r\nimport {InformationView} from '../components/InformationView';\r\n\r\nimport {graphql} from '../graphql/graphqlService';\r\nimport {createLoginBody} from '../graphql/queries';\r\nimport {setUserAuth} from '../graphql/sessionData';\r\nimport {AuthContext} from '../context/Authentication';\r\n\r\nimport style from '../styles/Container.Form.Style';\r\nimport {Linking} from 'expo';\r\n\r\nfunction loginFetch(id, password){\r\n    let body = createLoginBody(id, password);\r\n    return graphql(body);\r\n}\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst trdWidth = (width/3);\r\n\r\n\r\nexport function LoginArea ({navigation}){\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [id, onChangeId] = useState('email or username');\r\n    const [password, onChangePassword] = useState('password');\r\n    const {login} = useContext(AuthContext);\r\n    \r\n    const [menuVisible, menuToggle] = useState(false);\r\n    const [isError, errorToggle] = useState(false);\r\n\r\n    useEffect(() => {\r\n        Linking.getInitialURL().then((data) => {\r\n            let { path, queryParams } = Linking.parse(data);\r\n            Linking.set\r\n            if(path.includes('verify') || path.includes('Verify')){ \r\n                navigation.push('Verify', queryParams);\r\n            } else if(path.includes('reset-password') || path.includes('VerifyResetPassword')){\r\n                navigation.push('VerifyResetPassword', queryParams);\r\n            } else if(path.includes('Register')){\r\n                navigation.push('Register', queryParams);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <View style={style.containerBody}>\r\n            <View style={styles.containerTitle}>\r\n                <TextBody text={'FERN '} weight={'black'} fontSize={26}/>\r\n                <TextBody text={'STUDY SPOT FINDER'} />\r\n            </View>\r\n            <View style={style.containerMain}>\r\n                <View style={{width: '100%', flexDirection: 'row', justifyContent: 'space-between', zIndex:100}}>\r\n                    <View style={{width: 32, height: 32}} />\r\n                    <TextBody text={'LOGIN'} weight={'bold'} style={{justifySelf:'center'}}/>\r\n                    <ButtonIcon\r\n                    style={{justifySelf:'end'}}\r\n                    iconName={'dots-vertical'}\r\n                    iconSize={24}\r\n                    onPress={() => {\r\n                        if(!menuVisible){\r\n                            menuToggle(true);\r\n                        } else {\r\n                            menuToggle(false);\r\n                        }\r\n                    }} />\r\n                    {menuVisible &&\r\n                        <MenuToggleable \r\n                        onClose={() => {menuToggle(false);}}\r\n                        styleContainer={{right:0,top:30}}\r\n                        menuItems={\r\n                            <>\r\n                            <MenuToggleableItem itemDelay={0} itemIcon={\"account-check\"} itemText={\"Verify Account\"} onMenuItemPress={() => navigation.push('Verify')}/>\r\n                            <View style={{height:12}}/>\r\n                            <MenuToggleableItem itemDelay={50} itemIcon={\"shield-check\"} itemText={\"Verify Reset Password\"} onMenuItemPress={() => navigation.push('VerifyResetPassword')}/>\r\n                            </>\r\n                        }\r\n                        />\r\n                    }\r\n                </View>\r\n                <View style={style.containerTextInputLabels}>\r\n                    <TextBody text={'Email/Username'} />\r\n                </View>\r\n                <FormTextInput\r\n                    value={id}\r\n                    onChangeText={text => onChangeId(text)}/>\r\n                <View style={style.containerTextInputLabels}>\r\n                    <TextBody text={'Password'} />\r\n                    <ButtonText\r\n                        text=\"Forgot your password?\"\r\n                        onPress={() => navigation.push('ResetPassword')}/>\r\n                </View>\r\n                <TextInputSecure\r\n                    value={password} \r\n                    onChangeText={text => onChangePassword(text)}/>\r\n                <View style={styles.containerBtnLogin}>\r\n                    <ButtonPrimary \r\n                        text=\"SUBMIT\"\r\n                        onPress={() => {\r\n                            setIsLoading(true);\r\n                            loginFetch(id, password).then(\r\n                                (result) =>{\r\n                                    setIsLoading(false);\r\n                                    if(result.error !== null){\r\n                                        errorToggle(true);\r\n                                    }\r\n                                    if(result.data !== null){\r\n                                        setUserAuth(result.data)\r\n                                            .then(() => {login();});\r\n                                    }\r\n                                },\r\n                                (error) => {}\r\n                            );}\r\n                        }/>\r\n                </View>\r\n            </View>\r\n            <View style={styles.containerRegister} >\r\n                <ButtonText\r\n                text={\"Make a new account. \"}\r\n                fontSize={16}\r\n                onPress={() => navigation.push('Register')}/>\r\n                <ButtonText\r\n                text={\"Here.\"}\r\n                weight={'bold'}\r\n                fontSize={16}\r\n                onPress={() => navigation.push('Register')}/>\r\n            </View>\r\n            {isLoading &&\r\n            <NotificationAlert text={\"Logging you in... please wait\"}/>\r\n            }\r\n            {isError &&\r\n            <NotificationAlert text={\"Failed to Login\"} onPress={() => {errorToggle(false)}}/>\r\n            }\r\n        </View>\r\n    );\r\n}\r\n\r\nlet containerTitleWidth;\r\n\r\nfunction choseStyle(width){\r\n    if(width > 1000){\r\n        containerTitleWidth = trdWidth\r\n    } else {\r\n        containerTitleWidth = width - 40\r\n    }\r\n  }\r\n\r\nchoseStyle(width);\r\n\r\nconst styles = StyleSheet.create({\r\n    containerBody: {\r\n        flex: 1,\r\n        backgroundColor: '#F8F7F0',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    containerTitle: {\r\n        width: containerTitleWidth,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'baseline',\r\n    },\r\n    containerLabel: {\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    containerRegister: {\r\n        flexDirection: 'row',\r\n        marginTop: 6,\r\n        marginBottom: 6\r\n    },\r\n    containerBtnLogin: {\r\n        width: '100%',\r\n        flexDirection: 'row-reverse',\r\n        justifyContent: 'space-between',\r\n    },\r\n    containerMenu: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: '#222'\r\n    },\r\n    labelLogin: {\r\n      fontWeight: '700',\r\n      letterSpacing: 1,  \r\n    },\r\n    labelFern: {\r\n        fontSize: 24,\r\n        fontWeight: '700',\r\n        letterSpacing: 1,  \r\n      },\r\n});","import React from 'react';\r\nimport {View, TouchableOpacity} from 'react-native'; \r\nimport {MaterialCommunityIcons} from '@expo/vector-icons'; \r\n\r\nexport class ButtonTab extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <TouchableOpacity style={{...this.props.styleContainer,}} onPress={this.props.onPress}>\r\n                <View style={{\r\n                ...this.props.styleButton,\r\n                flexDirection: 'row',        \r\n                height: (this.props.buttonSize != null) ? this.props.buttonSize : 32,\r\n                width: (this.props.iconNameAdd != null) ? ((this.props.buttonSize != null) ? this.props.buttonSize : 77) : 42,\r\n                borderTopLeftRadius:(this.props.rightTab == true) ? 4 : 0,\r\n                borderTopRightRadius:(this.props.leftTab == true) ? 4 : 0,\r\n                borderBottomLeftRadius:(this.props.rightTab == true) ? 4 : 0,\r\n                borderBottomRightRadius:(this.props.leftTab == true) ? 4 : 0,\r\n                backgroundColor: (this.props.buttonBackgroundColor != null) ? this.props.buttonBackgroundColor : 'transparent',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                shadowColor: \"#222222\",\r\n                shadowOffset: {\r\n                  width: 0,\r\n                  height: 3,\r\n                },\r\n                shadowOpacity: this.props.hasShadow ? 0.29 : 0.0,\r\n                shadowRadius: this.props.hasShadow ? 4.65 : 0,\r\n                elevation: this.props.hasShadow ? 4 : 0,\r\n                zIndex: 99, \r\n                }}>\r\n                    <MaterialCommunityIcons \r\n                    name={this.props.iconNameAdd} \r\n                    size={(this.props.iconNameAdd != null) ? ((this.props.iconSize != null) ? this.props.iconSize : 24) : 0} \r\n                    color={(this.props.iconNameAdd != null) ? ((this.props.iconColor != null) ? this.props.iconColor : \"#222\") : \"#222\"}/>\r\n                    <View style={{\r\n                        height: '60%',\r\n                        width:(this.props.iconNameAdd != null) ? 1 : 0,\r\n                        marginLeft: (this.props.iconNameAdd != null) ? 4 : 0, \r\n                        marginRight: (this.props.iconNameAdd != null) ? 4 : 0,\r\n                        borderRadius: 2,  \r\n                        backgroundColor: \"#CCC\"\r\n                    }}/> \r\n                    <MaterialCommunityIcons \r\n                    name={this.props.iconName} \r\n                    size={(this.props.iconSize != null) ? this.props.iconSize : 24} \r\n                    color={(this.props.iconColor != null) ? this.props.iconColor : \"#222\"}/>\r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}","function createRegistrationBody(email, username, password, accepted){\r\n    let variables = {\r\n        userModel: {\r\n            email: email,\r\n            username : username,\r\n            password : password,\r\n            accepted : accepted\r\n        }\r\n    };\r\n    let body = {\r\n        query: 'mutation ($userModel: UserModel!){createUser(userModel: $userModel){success}}',\r\n        variables: JSON.stringify(variables)\r\n    };\r\n    return body;\r\n};\r\n\r\nfunction createVerificationBody(email, verificationCode){\r\n    let variables = {\r\n        verificationModel: {\r\n            email: email,\r\n            verificationCode : verificationCode\r\n        }\r\n    };\r\n    let body = {\r\n        query: 'mutation ($verificationModel: VerificationModel!){verifyEmail(verificationModel: $verificationModel){success}}',\r\n        variables: JSON.stringify(variables)\r\n    };\r\n    return body;\r\n};\r\n\r\nfunction createPasswordResetVerificationBody(email, password, verificationCode){\r\n    let variables = {\r\n        passwordResetModel: {\r\n            email: email,\r\n            password: password,\r\n            verificationCode : verificationCode\r\n        }\r\n    };\r\n    let body = {\r\n        query: 'mutation ($passwordResetModel: PasswordResetModel!){resetPassword(passwordResetModel: $passwordResetModel){success}}',\r\n        variables: JSON.stringify(variables)\r\n    };\r\n    return body;\r\n};\r\n\r\nfunction createPasswordResetEmailBody(email){\r\n    let body = {\r\n        query: 'mutation {createPasswordResetEmail(email: \\\"' + email + '\\\"){success}}'\r\n    };\r\n    return body;\r\n};\r\n\r\nfunction createAddLocationBody(name, streetAddress, city, state, zipCode){\r\n    let variables = {\r\n        locationInputModel: {\r\n            name: name,\r\n            streetAddress: streetAddress,\r\n            city: city,\r\n            state: state,\r\n            zipCode: zipCode\r\n        }\r\n    };\r\n    let body = {\r\n        query: 'mutation ($locationInputModel: LocationInputModel!){createNewLocation(locationModel: $locationInputModel){success id}}',\r\n        variables: JSON.stringify(variables)\r\n    };\r\n    return body;\r\n};\r\n\r\nfunction createAddReviewBody(locationId, noise, wifi, seating, outlets, title, review){\r\n    let variables = {\r\n        reviewInputModel: {\r\n            locationId: locationId,\r\n            noise: noise,\r\n            wifi: wifi,\r\n            seating: seating,\r\n            outlets: outlets,\r\n            title: title,\r\n            review: review\r\n        }\r\n    };\r\n    let body = {\r\n        query: 'mutation ($reviewInputModel: ReviewInputModel!){createNewReview(reviewModel: $reviewInputModel){success id}}',\r\n        variables: JSON.stringify(variables)\r\n    };\r\n    return body;\r\n};\r\n\r\nfunction createReportLocationBody(locationId, text){\r\n    let variables = {\r\n        reportModel: {\r\n            locationId: locationId,\r\n            text: text\r\n        }\r\n    };\r\n    let body = {\r\n        query: 'mutation ($reportModel: ReportLocationInputModel!){reportLocation(reportModel: $reportModel){success id}}',\r\n        variables: JSON.stringify(variables)\r\n    };\r\n    return body;\r\n}\r\n\r\nfunction createReportReviewBody(locationId, reviewId, text){\r\n    let variables = {\r\n        reportModel: {\r\n            locationId: locationId,\r\n            reviewId: reviewId,\r\n            text: text\r\n        }\r\n    };\r\n    let body = {\r\n        query: 'mutation ($reportModel: ReportReviewInputModel!){reportReview(reportModel: $reportModel){success id}}',\r\n        variables: JSON.stringify(variables)\r\n    };\r\n    return body;\r\n}\r\n\r\nexport {createRegistrationBody,\r\n    createVerificationBody, \r\n    createPasswordResetVerificationBody, \r\n    createPasswordResetEmailBody, \r\n    createAddLocationBody, \r\n    createAddReviewBody,\r\n    createReportLocationBody,\r\n    createReportReviewBody\r\n};","import React from 'react';\r\nimport {View, Alert, CheckBox} from 'react-native';\r\n\r\nimport {FormTextInput} from '../components/FormTextInput';\r\nimport {TextInputSecure} from '../components/TextInputSecure';\r\nimport {ButtonPrimary} from '../components/ButtonPrimary';\r\nimport {ButtonTab} from '../components/ButtonTab';\r\nimport { default as TextBody} from '../components/TextBody';\r\nimport { NotificationAlert } from '../components/NotificationAlert';\r\n\r\nimport {graphql} from '../graphql/graphqlService';\r\nimport {createRegistrationBody} from '../graphql/mutations';\r\nimport {emailCS, passwordCS, usernameCS} from '../helpers/Constraints'\r\n\r\nimport style from '../styles/Container.Form.Style'; \r\n\r\nfunction register(isSelected, email, username, password, navigation){\r\n    if(isSelected){\r\n        let body = createRegistrationBody(email, username, password, true);\r\n        graphql(body).then(\r\n            (result) => {\r\n                if(result.data !== null){\r\n                    navigation.push('Verify');\r\n                }\r\n            },\r\n            (error) => {\r\n                Alert.alert(error)\r\n            }\r\n        );\r\n    } else {\r\n\r\n    }\r\n}\r\n\r\nexport function RegisterArea ({navigation}){\r\n    const [email, onChangeEmail] = React.useState('email');\r\n    const [username, onChangeUsername] = React.useState('username');\r\n    const [password, onChangePassword] = React.useState('password');\r\n    const [isSelected, setSelection] = React.useState(false);\r\n    const [checkboxError, checkboxErrorToggle] = React.useState(false);\r\n    const [accountCreationError, accountCreationErrorToggle] = React.useState(false);\r\n\r\n    return (\r\n        <View style={style.containerBody}>\r\n            <ButtonTab\r\n            styleContainer={{position:'absolute', top: 20, left: 0}}\r\n            iconName={\"arrow-left-bold\"}\r\n            leftTab={true}\r\n            hasShadow={true}\r\n            buttonBackgroundColor={'#FFF'}\r\n            onPress={() => navigation.goBack()}/>\r\n            <View style={style.containerMain}>\r\n                <View style={style.containerTextInputLabels}>\r\n                    <TextBody text={'Email'} />\r\n                </View>\r\n                <FormTextInput \r\n                    value={email}\r\n                    onChangeText={text => onChangeEmail(text)}\r\n                    constraints={emailCS}/>\r\n                <View style={style.containerTextInputLabels}>\r\n                    <TextBody text={'Username'} />\r\n                </View>\r\n                <FormTextInput \r\n                    value={username} \r\n                    onChangeText={text => onChangeUsername(text)}\r\n                    constraints={usernameCS}/>\r\n                <View style={style.containerTextInputLabels}>\r\n                    <TextBody text={'Password'} />\r\n                </View>\r\n                <TextInputSecure \r\n                    value={password}\r\n                    onChangeText={text => onChangePassword(text)}\r\n                    constraints={passwordCS}/>\r\n                <View style={{flexDirection: 'row'}}>\r\n                    <View style={{marginTop:4}}>\r\n                    <CheckBox\r\n                    value={isSelected}\r\n                    onValueChange={setSelection}/>\r\n                    </View>\r\n                    <View style={{width:8}} />\r\n                    <TextBody text={'I have read and agree to the terms and conditions and privacy policy.'}/>\r\n                </View>                \r\n                <ButtonPrimary\r\n                    styleContainer={{marginTop:16}} \r\n                    text=\"REGISTER\"\r\n                    onPress={() => {    \r\n                        if(isSelected){\r\n                        let body = createRegistrationBody(email, username, password, true);\r\n                        graphql(body).then(\r\n                            (result) => {\r\n                                if(result.error !== null){\r\n                                    accountCreationErrorToggle(true);\r\n                                }\r\n                                if(result.data !== null){\r\n                                    navigation.push('Verify');\r\n                                }\r\n                            },\r\n                            (error) => {\r\n                                Alert.alert(error)\r\n                            }\r\n                        );\r\n                    } else {\r\n                        checkboxErrorToggle(true);\r\n                        setTimeout(() => {\r\n                            errorToggle(false);\r\n                        }, 4000);\r\n                    }\r\n                }}/>\r\n            </View>\r\n            {checkboxError &&\r\n            <NotificationAlert text={'Please read and accept our terms & conditions and privacy policy.'} onPress={() => {checkboxErrorToggle(false)}}/>\r\n            }\r\n            {accountCreationError &&\r\n            <NotificationAlert text={'Failed to create account please try again.'} onPress={() => {accountCreationErrorToggle(false)}}/>\r\n            }\r\n        </View>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {View, Alert} from 'react-native';\r\n\r\nimport {FormTextInput} from '../components/FormTextInput';\r\nimport {ButtonPrimary} from '../components/ButtonPrimary';\r\nimport { default as TextBody} from '../components/TextBody';\r\nimport {ButtonTab} from '../components/ButtonTab';\r\nimport {InformationView} from '../components/InformationView';\r\n\r\nimport {graphql} from '../graphql/graphqlService';\r\nimport {createVerificationBody} from '../graphql/mutations';\r\nimport {emailCS, notEmptyCS} from '../helpers/Constraints';\r\n\r\nimport style from '../styles/Container.Form.Style';\r\n\r\n\r\nfunction verify(email, verificationCode, navigation){\r\n  let body = createVerificationBody(email, verificationCode);\r\n  graphql(body).then(\r\n      (result) => {\r\n          if(result.data !== null){\r\n            navigation.push('Login');\r\n          }\r\n      },\r\n      (error) => {\r\n          Alert.alert(error)\r\n      }\r\n  );\r\n}\r\n\r\nexport function VerifyArea({navigation, route}) {\r\n  let params = route.params;\r\n  const [email, onChangeEmail] = React.useState(params === undefined ? '' : params.userEmail);\r\n  const [verificationCode, onChangeverificationCode] = React.useState(params === undefined ? '' : params.verificationCode);\r\n  \r\n  return (\r\n      <View style={style.containerBody}>\r\n        <ButtonTab\r\n        styleContainer={{position:'absolute', top:20, left:0}}\r\n        iconName={\"arrow-left-bold\"}\r\n        buttonBackgroundColor={'#FFF'}\r\n        hasShadow={true}\r\n        leftTab={true}\r\n        onPress={() => navigation.goBack()}/>\r\n        <View style={style.containerMain}>\r\n          <View style={style.containerTextInputLabels}>\r\n            <TextBody text={'Email/Username'} />\r\n          </View>            \r\n          <FormTextInput \r\n              value={email}\r\n              defaultValue={email}\r\n              onChangeText={text => onChangeEmail(text)}\r\n              constraints={emailCS}/>\r\n          <View style={style.containerTextInputLabels}>\r\n              <TextBody text={'Verification Code'} />\r\n          </View>                 \r\n          <FormTextInput \r\n              value={verificationCode}\r\n              defaultValue={verificationCode}\r\n              onChangeText={text => onChangeverificationCode(text)}\r\n              constraints={notEmptyCS}/>\r\n          <InformationView styleContainer={{marginVertical:8}} text={'If you haven\\'t recieved an email please make sure to check your email\\'s spam folder.'} hasShadow={false}/>                       \r\n          <ButtonPrimary\r\n              text=\"VERIFY\"\r\n              onPress={() => verify(email, verificationCode, navigation)}/>\r\n        </View>\r\n      </View>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {View, Alert} from 'react-native';\r\n\r\nimport {FormTextInput} from '../components/FormTextInput';\r\nimport {ButtonPrimary} from '../components/ButtonPrimary';\r\nimport { default as TextBody} from '../components/TextBody';\r\nimport {ButtonTab} from '../components/ButtonTab';\r\nimport {InformationView} from '../components/InformationView';\r\n\r\nimport {graphql} from '../graphql/graphqlService';\r\nimport {emailCS} from '../helpers/Constraints';\r\nimport {createPasswordResetEmailBody} from '../graphql/mutations';\r\n\r\nimport style from '../styles/Container.Form.Style'; \r\n\r\nfunction sendEmail(email, navigation){\r\n  let body = createPasswordResetEmailBody(email);\r\n  graphql(body).then(\r\n      (result) => {\r\n          if(result.data !== null){\r\n            navigation.push('VerifyResetPassword');\r\n          }\r\n      },\r\n      (error) => {\r\n          Alert.alert(error)\r\n      }\r\n  );\r\n}\r\n\r\nexport function ResetPasswordArea({navigation}) {\r\n  const [email, onChangeEmail] = React.useState('email');\r\n  return (\r\n      <View style={style.containerBody}>\r\n        <ButtonTab\r\n        styleContainer={{position:'absolute', top:20, left:0}}\r\n        iconName={\"arrow-left-bold\"}\r\n        buttonBackgroundColor={'#FFF'}\r\n        hasShadow={true}\r\n        leftTab={true}\r\n        onPress={() => navigation.goBack()}/>\r\n        <View style={style.containerMain}> \r\n          <View style={style.containerTextInputLabels}>\r\n              <TextBody text={'Email/Username'} />\r\n          </View>       \r\n          <FormTextInput \r\n              value={email}\r\n              onChangeText={text => onChangeEmail(text)}\r\n              constraints={emailCS}/>\r\n          <InformationView styleContainer={{marginVertical:8}} text={'You will be sent an email containing instructions on how to reset your password.'} hasShadow={false}/>                  \r\n          <ButtonPrimary \r\n              text=\"SEND EMAIL\"\r\n              onPress={() => sendEmail(email, navigation)}/>\r\n        </View>\r\n      </View>\r\n  );\r\n}","import React from 'react';\r\nimport {View, Alert} from 'react-native';\r\n\r\nimport {FormTextInput} from '../components/FormTextInput';\r\nimport {TextInputSecure} from '../components/TextInputSecure';\r\nimport {ButtonPrimary} from '../components/ButtonPrimary';\r\nimport { default as TextBody} from '../components/TextBody';\r\nimport {ButtonTab} from '../components/ButtonTab';\r\n\r\nimport {graphql} from '../graphql/graphqlService';\r\nimport {createPasswordResetVerificationBody} from '../graphql/mutations';\r\nimport {emailCS, passwordCS, notEmptyCS} from '../helpers/Constraints';\r\n\r\nimport style from '../styles/Container.Form.Style';\r\n\r\n\r\nfunction verifyPasswordReset(email, password, verificationCode, navigation){\r\n  {\r\n      let body = createPasswordResetVerificationBody(email, password, verificationCode);\r\n      graphql(body).then(\r\n          (result) => {\r\n              if(result.data !== null){\r\n                navigation.push('Login');\r\n              }\r\n          },\r\n          (error) => {\r\n              Alert.alert(error)\r\n          }\r\n      );\r\n  }\r\n}\r\n\r\nexport function VerifyResetPasswordArea({navigation, route}) {\r\n  let params = route.params;\r\n  const [email, onChangeEmail] = React.useState(params === undefined ? '' : params.userEmail);\r\n  const [password, onChangePassword] = React.useState('password');\r\n  const [verificationCode, onChangeverificationCode] = React.useState(params === undefined ? '' : params.verificationCode);\r\n  return (\r\n    <View style={style.containerBody}>\r\n        <ButtonTab\r\n        styleContainer={{position:'absolute', top:20, left:0}}\r\n        iconName={\"arrow-left-bold\"}\r\n        buttonBackgroundColor={'#FFF'}\r\n        hasShadow={true}\r\n        leftTab={true}\r\n        onPress={() => navigation.goBack()}/>\r\n        <View style={style.containerMain}>\r\n            <View style={style.containerTextInputLabels}>\r\n                <TextBody text={'Email/Username'} />\r\n            </View>\r\n            <FormTextInput \r\n                value={email}\r\n                defaultValue={email}\r\n                onChangeText={text => onChangeEmail(text)}\r\n                constraints={emailCS}/>\r\n            <View style={style.containerTextInputLabels}>\r\n                <TextBody text={'New Password'} />\r\n            </View>\r\n            <TextInputSecure \r\n                value={password}\r\n                onChangeText={text => onChangePassword(text)}\r\n                constraints={passwordCS}/>\r\n            <View style={style.containerTextInputLabels}>\r\n                <TextBody text={'Verification Code'} />\r\n            </View>\r\n            <FormTextInput \r\n                value={verificationCode}\r\n                defaultValue={verificationCode}\r\n                onChangeText={text => onChangeverificationCode(text)}\r\n                constraints={notEmptyCS}/>\r\n            <ButtonPrimary \r\n                text=\"RESET PASSWORD\"\r\n                onPress={() => verifyPasswordReset(email, password, verificationCode, navigation)}/>\r\n        </View>\r\n    </View>\r\n  );\r\n}","import React from 'react';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport {LoginArea} from '../areas/Login';\r\nimport {RegisterArea} from '../areas/Register';\r\nimport {VerifyArea} from '../areas/Verify';\r\nimport {ResetPasswordArea} from '../areas/ResetPassword';\r\nimport {VerifyResetPasswordArea} from '../areas/VerifyResetPassword';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport function LoginNavigator({navigation}){\r\n    return (\r\n        <Stack.Navigator name=\"LoginStack\" headerMode='none'>\r\n            <Stack.Screen name=\"Login\" component={LoginArea}/>\r\n            <Stack.Screen name=\"Register\" component={RegisterArea}/>\r\n            <Stack.Screen name=\"Verify\" component={VerifyArea}/>\r\n            <Stack.Screen name=\"ResetPassword\" component={ResetPasswordArea}/>\r\n            <Stack.Screen name=\"VerifyResetPassword\" component={VerifyResetPasswordArea}/>\r\n        </Stack.Navigator>\r\n    );\r\n}\r\n    ","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Text, View, Dimensions} from 'react-native';\r\n\r\nimport { setFontTypeMerriweather } from '../helpers/SetFontType'\r\nimport { AppLoading } from 'expo';\r\nimport {\r\n  useFonts,\r\n  Merriweather_300Light,\r\n  Merriweather_300Light_Italic,\r\n  Merriweather_400Regular,\r\n  Merriweather_400Regular_Italic,\r\n  Merriweather_700Bold,\r\n  Merriweather_700Bold_Italic,\r\n  Merriweather_900Black,\r\n  Merriweather_900Black_Italic \r\n} from '@expo-google-fonts/merriweather';\r\n\r\nconst { height, width } = Dimensions.get('window');\r\n\r\nexport default (props) => {\r\n\r\n    let [fontsLoaded] = useFonts({\r\n        Merriweather_300Light,\r\n        Merriweather_300Light_Italic,\r\n        Merriweather_400Regular,\r\n        Merriweather_400Regular_Italic,\r\n        Merriweather_700Bold,\r\n        Merriweather_700Bold_Italic,\r\n        Merriweather_900Black,\r\n        Merriweather_900Black_Italic \r\n    });\r\n\r\n    if (!fontsLoaded) {\r\n        return <AppLoading />;\r\n    } else {\r\n        return (\r\n            <View>\r\n                <Text style={{ fontFamily: setFontTypeMerriweather(props.weight), fontSize: props.fontSize, color: props.color}}>\r\n                {props.text}\r\n                </Text>\r\n            </View>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport {View} from 'react-native'; \r\n\r\nimport { default as TextBody} from './TextBody';\r\n\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nexport function BarIconItem(props){\r\n    return (\r\n        <View style={{flexDirection: props.containerOrientation , alignItems: props.alignLabel}}>\r\n        <TextBody text={ props.iconLabel} color={ props.labelColor}/>\r\n            <View style={{borderWidth: props.iconBorderWidth, borderColor: props.iconBorderColor, borderRadius: props.iconBorderRadius}}>\r\n            <MaterialCommunityIcons name={ props.iconName} size={ props.iconSize} color={ props.iconColor}/>\r\n            </View>\r\n        </View>\r\n    )\r\n}","import React from 'react';\r\nimport {View, StyleSheet} from 'react-native'; \r\n\r\nimport {BarIconItem} from './BarIconItem';\r\n\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nexport class BarIcon extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    static defaultProps = {\r\n        iconLabels: [null,null,null,null]     \r\n    }\r\n\r\n    _createBarIconItem = (position , itemProps, hasSpacer) => {\r\n        return(\r\n            <>\r\n            <BarIconItem\r\n                iconName={itemProps.iconNames[position]}\r\n                iconSize={itemProps.iconSize}\r\n                iconColor={itemProps.iconColors[position]}\r\n                iconLabel={itemProps.iconLabels[position]}  \r\n                labelColor={itemProps.labelColor}\r\n                iconBorderWidth={itemProps.iconBorderWidth}\r\n                iconBorderRadius={itemProps.iconBorderRadius}\r\n                iconBorderColor={itemProps.iconBorderColor}\r\n                containerOrientation={itemProps.containerOrientation} \r\n                alignItems={itemProps.alignLabel} />\r\n            {hasSpacer && <View style={styles.ratingSpacers} />}\r\n            </>\r\n        )\r\n    }\r\n    \r\n    _createBarIconItemGroup = (itemProps) => {\r\n        var itemGroup = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            var item = () => this._createBarIconItem(i,itemProps);\r\n            itemGroup.push({item:item});\r\n        }\r\n        console.log(itemGroup);\r\n        return itemGroup;\r\n    };\r\n\r\n    render(){\r\n        const {iconNames, iconColors, iconLabels, iconBorderColor, iconBorderWidth, iconBorderRadius, iconSize, containerOrientation, alignLabel, labelColor} = this.props;\r\n        const barIconProps = {iconNames, iconColors, iconLabels, iconBorderColor, iconBorderWidth, iconBorderRadius, iconSize, containerOrientation, alignLabel, labelColor};\r\n        // const barIconItems = this._createBarIconItemGroup(barIconProps);\r\n        return (\r\n            <View style={styles.containerRatings}>\r\n                {this._createBarIconItem(0,barIconProps,true)}\r\n                {this._createBarIconItem(1,barIconProps, true)}\r\n                {this._createBarIconItem(2,barIconProps, true)}\r\n                {this._createBarIconItem(3,barIconProps, false)}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles =  StyleSheet.create({\r\n    containerRatings: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    ratingSpacers: {\r\n        width:6\r\n    }\r\n});","const ratingsReverse = ['S','A','B','C'];\r\nconst ratings = ['C','B','A','S'];\r\n\r\nconst wifiIcons = ['wifi-strength-off-outline','wifi-strength-2','wifi-strength-3','wifi-strength-4'];\r\nconst wifiValues = ratings;\r\n\r\nconst noiseIcons = ['volume-high','volume-medium','volume-low','volume-off'];\r\nconst noiseValues = ratingsReverse;\r\n\r\nconst seatingIcons = ['hexagon-outline','hexagon-slice-2','hexagon-slice-4','hexagon-slice-6'];\r\nconst seatingValues = ratings;\r\n\r\nconst outletsIcons = ['battery-outline','battery-30','battery-70','battery'];\r\nconst outletsValues = ratings;\r\n\r\nconst filters = [null, ...ratings];\r\nconst filtersReverse = [null, ...ratingsReverse];\r\n\r\nconst wifiFilterIcons = ['selection', ...wifiIcons];\r\nconst wifiFilterValues = filters;\r\n\r\nconst noiseFilterIcons = ['selection', ...noiseIcons];\r\nconst noiseFilterValues = filtersReverse;\r\n\r\nconst seatingFilterIcons = ['selection', ...seatingIcons];\r\nconst seatingFilterValues = filters;\r\n\r\nconst outletsFilterIcons = ['selection', ...outletsIcons];\r\nconst outletsFilterValues = filters;\r\n\r\nconst noRatingIcon = ['set-none'];\r\n\r\n\r\nexport {wifiIcons, wifiValues, noiseIcons, noiseValues, seatingIcons, seatingValues, outletsIcons, outletsValues,\r\n        wifiFilterIcons, wifiFilterValues, noiseFilterIcons, noiseFilterValues, seatingFilterIcons, seatingFilterValues, outletsFilterIcons, outletsFilterValues, noRatingIcon};","import {wifiFilterIcons, wifiFilterValues, noiseFilterIcons, noiseFilterValues, seatingFilterIcons, seatingFilterValues, outletsFilterIcons, outletsFilterValues, noRatingIcon} from '../icons/RatingIcons';\r\n\r\nexport function wifiRatingConverter(ratingValue) {\r\n    switch (ratingValue) {\r\n        case wifiFilterValues[4]:\r\n            return wifiFilterIcons[4];\r\n        case wifiFilterValues[3]:\r\n            return wifiFilterIcons[3];\r\n        case wifiFilterValues[2]:\r\n            return wifiFilterIcons[2];\r\n        case wifiFilterValues[1]:\r\n            return wifiFilterIcons[1];\r\n        case wifiFilterValues[0]:\r\n            return wifiFilterIcons[0];\r\n        default:\r\n            return noRatingIcon[0];\r\n    }\r\n}\r\n\r\nexport function noiseRatingCoverter(ratingValue) {\r\n    switch (ratingValue) {\r\n        case noiseFilterValues[4]:\r\n            return noiseFilterIcons[4];\r\n        case noiseFilterValues[3]:\r\n            return noiseFilterIcons[3];\r\n        case noiseFilterValues[2]:\r\n            return noiseFilterIcons[2];\r\n        case noiseFilterValues[1]:\r\n            return noiseFilterIcons[1];\r\n        case noiseFilterValues[0]:\r\n            return noiseFilterIcons[0];\r\n        default:\r\n            return noRatingIcon[0];\r\n    }\r\n}\r\n\r\nexport function seatingRatingConverter(ratingValue) {\r\n    switch (ratingValue) {\r\n        case seatingFilterValues[4]:\r\n            return seatingFilterIcons[4];\r\n        case seatingFilterValues[3]:\r\n            return seatingFilterIcons[3];\r\n        case seatingFilterValues[2]:\r\n            return seatingFilterIcons[2];\r\n        case seatingFilterValues[1]:\r\n            return seatingFilterIcons[1];\r\n        case seatingFilterValues[0]:\r\n            return seatingFilterIcons[0];\r\n        default:\r\n            return noRatingIcon[0];            \r\n    }\r\n}\r\n\r\nexport function outletRatingConverter(ratingValue) {\r\n    switch (ratingValue) {\r\n        case outletsFilterValues[4]:\r\n            return outletsFilterIcons[4];\r\n        case outletsFilterValues[3]:\r\n            return outletsFilterIcons[3];\r\n        case outletsFilterValues[2]:\r\n            return outletsFilterIcons[2];\r\n        case outletsFilterValues[1]:\r\n            return outletsFilterIcons[1];\r\n        case outletsFilterValues[0]:\r\n            return outletsFilterIcons[0];\r\n        default:\r\n            return noRatingIcon[0];\r\n        }\r\n}\r\n\r\nexport function distanceConverter(distanceRaw, numOfDec){\r\n    return Number(Math.round(distanceRaw + 'e' + numOfDec) + 'e-' + numOfDec);\r\n}\r\n\r\nexport function resizeLocationName(locationName, fontSizeLong, fontSizeShort){\r\n    if(locationName.length > 20){\r\n        return fontSizeLong;\r\n    } else {\r\n        return fontSizeShort;\r\n    }\r\n}\r\n","export function setRatingIconColor(ratingValue){\r\n    switch (ratingValue) {\r\n        case \"S\":\r\n            return '#3c5547';\r\n        case \"A\":\r\n            return '#7ea58e';\r\n        case \"B\":\r\n            return '#a9c3b4';\r\n        case \"C\":\r\n            return '#d4e0d9';\r\n    }\r\n    return '#59806a';\r\n};","import React from 'react';\r\nimport {View, StyleSheet, Image, TouchableOpacity, Dimensions} from 'react-native';\r\n\r\nimport {BarIcon} from \"./BarIcon\";\r\nimport { default as TextTitle} from './TextTitle';\r\nimport { default as TextBody} from './TextBody';\r\nimport {ButtonIcon} from './ButtonIcon';\r\n\r\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\r\nimport { Overlay } from 'react-native-elements';\r\nimport Modal from 'modal-react-native-web';\r\n\r\nimport { wifiRatingConverter, noiseRatingCoverter, seatingRatingConverter, outletRatingConverter} from '../helpers/Converters';\r\nimport { setRatingIconColor } from '../helpers/SetRatingIconColor';\r\n\r\nconst { height, width } = Dimensions.get('window');\r\nlet imageSize;\r\n\r\nfunction choseStyle(width){\r\n    if(width > 1000){\r\n      imageSize = width/2.5\r\n    } else {\r\n      imageSize = width;\r\n    }\r\n  }\r\n\r\nchoseStyle(width);\r\n\r\nexport class ReviewCard extends React.Component {\r\n    state = {\r\n      index: 0,\r\n      imageIndexPressed: 0,\r\n      activeSlide: 0,\r\n      showReviewImages: false,\r\n    };\r\n\r\n    _renderItem = ({item, index}) => {\r\n      return (\r\n        <Image source={{ uri: item }} style={{ width: imageSize-20, height: imageSize-20, alignSelf: 'center', borderRadius: 4}} />    \r\n      );\r\n    }\r\n\r\n    get pagination () {\r\n      return (\r\n        <Pagination\r\n          dotsLength={this.props.review.imageUris.length}\r\n          activeDotIndex={this.state.activeSlide}\r\n          containerStyle={{}}\r\n          dotStyle={{\r\n              width: 10,\r\n              height: 10,\r\n              borderRadius: 5,\r\n              marginHorizontal: 4,\r\n              backgroundColor: 'rgba(255, 255, 255, 0.92)'\r\n          }}\r\n          inactiveDotStyle={{\r\n              // Define styles for inactive dots here\r\n          }}\r\n          inactiveDotOpacity={0.4}\r\n          inactiveDotScale={0.6}\r\n        />\r\n      );\r\n    }\r\n\r\n\r\n    _toggleShowReviewImages = (itemIndex) => {\r\n      this.setState({imageIndexPressed: itemIndex});\r\n      this.setState({activeSlide: itemIndex});\r\n      this.setState({showReviewImages: !this.state.showReviewImages});\r\n    };\r\n\r\n    _createTopReviewHalf = (review) => {\r\n      return(\r\n        <>\r\n        <TextTitle text={review.title} weight={'bold'} fontSize={18}/>\r\n        <View style={styles.containerRatings}>\r\n          <BarIcon \r\n          iconNames={[wifiRatingConverter(review.wifi),noiseRatingCoverter(review.noise),seatingRatingConverter(review.seating),outletRatingConverter(review.outlets)]}\r\n          iconColors={[setRatingIconColor(\"E\"),setRatingIconColor(\"E\"),setRatingIconColor(\"E\"),setRatingIconColor(\"E\")]}\r\n          labelColor= {'#CCC'}\r\n          containerOrientation = {'row'}\r\n          iconSize = {18} />\r\n        </View>\r\n        <View style={styles.divider} />\r\n        </>\r\n      );\r\n    }\r\n\r\n    _createImageSection = (review) => {\r\n      return(\r\n        <>\r\n        <View style={styles.containerThumbnails}>\r\n          <TouchableOpacity onPress={() => this._toggleShowReviewImages(0)}>\r\n            <Image source={review.imageUris[0]} style={styles.thumbnail} />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => this._toggleShowReviewImages(1)}>\r\n            <Image source={review.imageUris[1]} style={styles.thumbnail} />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => this._toggleShowReviewImages(2)}>\r\n            <Image source={review.imageUris[2]} style={styles.thumbnail} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <Overlay \r\n        ModalComponent={Modal} \r\n        isVisible={this.state.showReviewImages} \r\n        onBackdropPress={this._toggleShowReviewImages} \r\n        backdropStyle={{backgroundColor:\"rgba(0, 0, 0, 0.7)\", borderWidth:0}}\r\n        overlayStyle={{backgroundColor:'rgba(0, 0, 0, 0.0)', borderWidth:0, shadowColor:'rgba(0, 0, 0, 0.0)', shadowOpacity:0, shadowRadius:0, elevation:0}}>\r\n          <View style={{width:imageSize, flexDirection:'row-reverse', alignSelf: 'center',}}>\r\n            <ButtonIcon\r\n            iconName={'close'}\r\n            iconColor={'#FFF'}\r\n            onPress={() => {this.setState({showReviewImages: false});}} />\r\n          </View>\r\n          <Carousel\r\n          layout='default'\r\n          ref={(c) => { this._carousel = c; }}\r\n          data={review.imageUris}\r\n          renderItem={this._renderItem}\r\n          sliderWidth={width}\r\n          itemWidth={imageSize}\r\n          firstItem={this.state.imageIndexPressed}\r\n          onSnapToItem={ (index) => this.setState({activeSlide:index}) }\r\n          enableSnap={true}\r\n          enableMomentum={false}\r\n          />\r\n          { this.pagination }\r\n        </Overlay>\r\n        </>\r\n      );\r\n    }\r\n\r\n    _createLowerReviewHalf = (review) => {\r\n      const dateCreated = review.dateCreated.substring(0,10);\r\n      return(\r\n        <>\r\n          <View style={styles.lowerRowContainer}>\r\n            <View style={{flex: 1}}>\r\n            <TextBody text={review.review} fontSize={16} />\r\n            <TextBody text={\"by \"+ review.userId + \" on \" + dateCreated} fontSize={14} color={\"#AAAAAA\"}/>\r\n            </View>\r\n            { this.props.onPress && <View style={styles.moreInfoContainer}><ButtonIcon iconSize={24} iconName={'arrow-right-circle-outline'} onPress={() => this.props.onPress()}/></View>}\r\n          </View>\r\n        </>\r\n      );\r\n    }\r\n\r\n    _createNewReview = (review, hasImages) => {\r\n      const dateCreated = review.dateCreated.substring(0,10);\r\n      return(\r\n        <>\r\n        <View style={[{...this.props.styleContainer, marginHorizontal:(this.props.margin != null) ? this.props.margin : 20},styles.containerMainAlt]}>\r\n          {!hasImages &&\r\n            <View style={{flex: 1, height:\"100%\", backgroundColor:\"#9DB492\", borderRadius:12}}/>\r\n          }\r\n          {hasImages &&\r\n            <TouchableOpacity  style={{flex: 1, height:\"100%\"}} onPress={() => this._toggleShowReviewImages(0)}>\r\n              <Image source={review.imageUris[0]} style={{height:'100%', width:'100%', borderRadius:12}} />\r\n            </TouchableOpacity>\r\n          }\r\n          <View style={{flex: 2, height:\"100%\", padding:12}}> \r\n            <View style={{flex:2 ,}}>\r\n              <TextBody text={review.title} weight={'bold'} fontSize={24}/>\r\n              <TextBody style={{marginTop:4}} text={review.review} fontSize={14} />\r\n            </View>\r\n            <View style={{flex:1 ,flexDirection:'row', alignItems:'flex-end', justifyContent: 'space-between'}}>\r\n              <View style={{flexDirection:'row'}}>\r\n              <TextBody text={\"by \"+ review.userId} fontSize={14} weight={\"semiBold\"} color={\"#222\"}/>\r\n              <TextBody text={\" on \" + dateCreated} fontSize={14} weight={\"regular\"} color={\"#AAA\"}/>\r\n              </View>\r\n              <View style={{padding:4, borderRadius:12, backgroundColor:\"#f2f2f2\"}}>\r\n              <BarIcon \r\n              iconNames={[wifiRatingConverter(review.wifi),noiseRatingCoverter(review.noise),seatingRatingConverter(review.seating),outletRatingConverter(review.outlets)]}\r\n              iconColors={[setRatingIconColor(\"E\"),setRatingIconColor(\"E\"),setRatingIconColor(\"E\"),setRatingIconColor(\"E\")]}\r\n              labelColor= {'#CCC'}\r\n              containerOrientation = {'row'}\r\n              iconSize = {18} />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n          {hasImages &&\r\n          <Overlay \r\n          ModalComponent={Modal} \r\n          isVisible={this.state.showReviewImages} \r\n          onBackdropPress={this._toggleShowReviewImages} \r\n          backdropStyle={{backgroundColor:\"rgba(0, 0, 0, 0.7)\", borderWidth:0}}\r\n          overlayStyle={{backgroundColor:'rgba(0, 0, 0, 0.0)', borderWidth:0, shadowColor:'rgba(0, 0, 0, 0.0)', shadowOpacity:0, shadowRadius:0, elevation:0}}>\r\n            <View style={{width:imageSize, flexDirection:'row-reverse', alignSelf: 'center',}}>\r\n              <ButtonIcon\r\n              iconName={'close'}\r\n              iconColor={'#FFF'}\r\n              onPress={() => {this.setState({showReviewImages: false});}} />\r\n            </View>\r\n            <Carousel\r\n            layout='default'\r\n            ref={(c) => { this._carousel = c; }}\r\n            data={review.imageUris}\r\n            renderItem={this._renderItem}\r\n            sliderWidth={width}\r\n            itemWidth={imageSize}\r\n            firstItem={this.state.imageIndexPressed}\r\n            onSnapToItem={ (index) => this.setState({activeSlide:index}) }\r\n            enableSnap={true}\r\n            enableMomentum={false}\r\n            />\r\n            { this.pagination }\r\n          </Overlay>\r\n          }\r\n        </>\r\n      );\r\n    }\r\n    \r\n    render(){\r\n        const {review} = this.props;\r\n\r\n        if(review.imageUris.length > 0){\r\n          return (\r\n              <>\r\n              {this._createNewReview(review,true)}\r\n              </>\r\n          );\r\n        } else {\r\n          return (\r\n            <>\r\n            {this._createNewReview(review,false)}\r\n            </>\r\n          );\r\n        }\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  containerMain: {\r\n      flexDirection: 'column',\r\n      marginTop: 12 ,\r\n      padding: 16,\r\n      borderRadius: 4,\r\n      alignItems: 'flex-start',\r\n      backgroundColor: '#fff',\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 3,\r\n      },\r\n      shadowOpacity: 0.29,\r\n      shadowRadius: 4.65,\r\n      elevation: 7,\r\n  },\r\n  containerMainAlt: {\r\n    flexDirection: 'row',\r\n    height: 200, //set for different screen sizes 3diff\r\n    marginTop: 12 ,\r\n    padding: 8, //set for different screen sizes 3diff\r\n    borderRadius: 12,\r\n    alignItems: 'flex-start',\r\n    backgroundColor: '#fff',\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowOpacity: 0.29,\r\n    shadowRadius: 4.65,\r\n    elevation: 7,\r\n},\r\n  containerRatings: {\r\n      flexDirection: 'row',\r\n      width: '100%',\r\n      marginTop: 4,\r\n      alignSelf:'center',\r\n      borderRadius: 4,\r\n  },\r\n  containerThumbnails: {\r\n      flexDirection: 'row',\r\n      width: '100%',\r\n      marginBottom: 4,\r\n  },\r\n  btnCloseOverlay: {\r\n    position: 'absolute',\r\n    top: 8,\r\n    left: 8,\r\n    zIndex: 99\r\n  },\r\n  divider: {\r\n    height: 0.1,\r\n    width: '100%',\r\n    marginTop: 4,\r\n    marginBottom: 6,\r\n    alignSelf: 'center',\r\n    backgroundColor: '#EEE',\r\n  },\r\n  thumbnail: {\r\n    height: 35,\r\n    width: 35,\r\n    marginRight: 4,\r\n    borderRadius: 6\r\n  }, \r\n  lowerRowContainer: {\r\n    width: '100%', \r\n    flexDirection: 'row', \r\n    display: 'flex', \r\n    justifyContent: 'flex-start'\r\n  },\r\n  moreInfoContainer: {\r\n    flex: 1,\r\n    marginLeft: 'auto',\r\n    alignItems: 'flex-end',\r\n    alignSelf: 'flex-end'\r\n  }\r\n});\r\n\r\n","import React, {Component} from 'react';\r\nimport {Animated, Easing, View, StyleSheet, Image, SafeAreaView, FlatList, Dimensions, Linking} from 'react-native';\r\n\r\nimport { default as TextTitle} from '../components/TextTitle';\r\nimport { default as TextBody} from '../components/TextBody';\r\nimport {ButtonIcon} from '../components/ButtonIcon';\r\nimport { ButtonTab } from '../components/ButtonTab';\r\nimport {BarIcon} from '../components/BarIcon';\r\nimport {ReviewCard} from '../components/ReviewCard';\r\n\r\nimport {graphqlAuth} from '../graphql/graphqlService';\r\nimport {getUserAuth} from '../graphql/sessionData';\r\nimport {createGetReviewByLocationBody, createGetLocationAndReviewsByLocationBody} from '../graphql/queries';\r\nimport style from '../styles/Container.Form.Style'; \r\n\r\nimport { wifiRatingConverter, noiseRatingCoverter, seatingRatingConverter, outletRatingConverter, distanceConverter } from '../helpers/Converters'\r\nimport { setRatingIconColor } from '../helpers/SetRatingIconColor';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\nconst hlfWidth = (width / 2);\r\nconst hlfHeight = (height / 2);\r\nconst isDesktop = width>1000;\r\n\r\nlet displayImageWidth; \r\nlet displayImageHeight;\r\nlet displayImageMarginTop;\r\nlet containerInfoWidth;\r\nlet containerInfoPadding;\r\n\r\nfunction choseStyle(width){\r\n    if(isDesktop){\r\n        displayImageWidth = width - 40;\r\n        displayImageHeight = hlfHeight - 40;\r\n        displayImageMarginTop = 20;\r\n        containerInfoWidth = width-320;\r\n        containerInfoPadding = 32;\r\n    } else {\r\n        displayImageWidth = width;\r\n        displayImageHeight = hlfHeight;\r\n        displayImageMarginTop = 0;\r\n        containerInfoWidth = width-40;\r\n        containerInfoPadding = 12;\r\n    }\r\n  }\r\n\r\nchoseStyle(width);\r\n  \r\nexport class ViewLocationArea extends Component {\r\n    \r\n    state = {\r\n        data: [],\r\n        start: 0,\r\n        max: 5,\r\n        location: {},\r\n        reachedEnd: false,\r\n        enableScrollViewScroll: true,\r\n        translateYValue: new Animated.Value(15),\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { locationId } = this.props.route.params;\r\n        this._fetchLocation(locationId);\r\n        this.fadeIn();\r\n    }\r\n\r\n    fadeIn = () => {\r\n        Animated.timing(this.state.translateYValue, {\r\n          toValue: 0,\r\n          easing: Easing.elastic(1),\r\n          duration: 2000\r\n        }).start();\r\n    };\r\n\r\n    _fetchLocation = (locationId) => {\r\n        let body = createGetLocationAndReviewsByLocationBody(0, this.state.max, locationId);\r\n        getUserAuth().then((token) => {graphqlAuth(token, body).then(\r\n            (result) => { \r\n                if(result.data === null){\r\n                    return;\r\n                }\r\n                this.setState({location: result.data.getLocationById})\r\n                this._updateReviewsState(result.data.getReviewsByLocationId);\r\n            },\r\n            (error) =>{\r\n                //do nothing\r\n            }\r\n        )});\r\n    };\r\n\r\n    _fetchReviews = (locationId) => {\r\n        if(this.state.reachedEnd){\r\n          return;\r\n        }\r\n        let body = createGetReviewByLocationBody(this.state.start, this.state.max, locationId);\r\n        getUserAuth().then((token) => {graphqlAuth(token, body).then(\r\n          (result) => {\r\n            if(result.data === null){\r\n              return;\r\n            }\r\n            this._updateReviewsState(result.data.getReviewsByLocationId);\r\n          },\r\n          (error) => {\r\n    \r\n          });\r\n        });\r\n    };\r\n\r\n    _updateReviewsState = (reviewsModal) => {\r\n        let paging = reviewsModal.paging;\r\n        let reviews = reviewsModal.reviews;\r\n        this.setState((prevState, nextProps) => ({\r\n          data: [...this.state.data, ...reviews],\r\n          reachedEnd: paging.stop - paging.start !== this.state.max\r\n        }));\r\n    }\r\n\r\n    _handleLoadMore = (locationId) => {\r\n        this.setState(\r\n            (prevState, nextProps) => ({\r\n            start: prevState.start + this.state.max,\r\n            }),\r\n            () => {\r\n                this._fetchReviews(locationId);\r\n            }\r\n        );\r\n    };\r\n\r\n    _addReview = (locationId, locationName) => {\r\n        this.props.navigation.navigate('AddReview', \r\n        {locationId: locationId, locationName: locationName});\r\n    };\r\n\r\n    _reportLocation = (locationId, locationName) => {\r\n        this.props.navigation.navigate('ReportLocation',\r\n        {locationId: locationId, locationName: locationName});\r\n    }\r\n\r\n    _getDirections = (url) => {\r\n        Linking.openURL(url).catch((error) => console.error('An error occurred', error));\r\n    }\r\n\r\n    _createControlPanel = (location) => {\r\n        return(\r\n            <>\r\n            <ButtonTab\r\n            iconName={\"arrow-left-bold\"}\r\n            buttonBackgroundColor={'#FFF'}\r\n            hasShadow={true}\r\n            leftTab={true}\r\n            onPress={() => this.props.navigation.goBack()}/>\r\n            <View style={{height:6}} />\r\n            <ButtonTab\r\n            iconName={'directions'}\r\n            buttonBackgroundColor={'#FFF'}\r\n            hasShadow={true}\r\n            leftTab={true}\r\n            onPress={() => this._getDirections('https://www.google.com/maps/search/?api=1&query='+encodeURI(location.name)+'&query_place_id=' + location.id)}\r\n            />\r\n            <View style={{height:6}} />\r\n            <ButtonTab\r\n            iconName={\"pencil\"}\r\n            buttonBackgroundColor={'#9DB492'}\r\n            hasShadow={true}\r\n            leftTab={true}\r\n            onPress={() => this._addReview(location.id, location.name)}\r\n            />\r\n            <View style={{height:6}} />\r\n            <ButtonTab\r\n            iconName={\"flag-variant\"}\r\n            buttonBackgroundColor={'#FF0033'}\r\n            hasShadow={true}\r\n            leftTab={true}\r\n            onPress={() => this._reportLocation(location.id, location.name)}\r\n            />\r\n            </>\r\n        );\r\n    }\r\n\r\n    _createMainDesktopBody = (location) => {\r\n        return(\r\n            <SafeAreaView style={styleDesktop.containerBody}>\r\n            <View style={styleDesktop.containerDisplayImage}>\r\n                <Image source={{uri : location.imageUri}} style={styleDesktop.displayImage} resizeMode=\"cover\" />\r\n            </View>\r\n            <View style={{width:'55%'}} />\r\n            <FlatList\r\n            ListHeaderComponent={\r\n                <View style={{width:'55%', alignSelf:'flex-end'}}> \r\n                <View>  \r\n                    <View style={styleDesktop.containerLocationInfo}>\r\n                        <TextBody style={{letterSpacing:1}} text={\"// LOCATION\"} weight={'semiBold'} color={\"#9DB492\"}/>\r\n                        <View style={{height:40}}></View>\r\n                        <TextBody text={location.name} weight={'bold'} fontSize={60} />\r\n                        <View style={styleDesktop.containerAddress}>\r\n                            <TextTitle text={location.streetAddress + \" \" + location.city + \", \" + location.state + \" \" + location.zipCode} fontSize={16} color={'#BBB'}/>\r\n                        </View>\r\n                        <View style={styleDesktop.containerRatings}>\r\n                            <BarIcon \r\n                            iconNames={[wifiRatingConverter(location.wifiRating),noiseRatingCoverter(location.noiseRating),seatingRatingConverter(location.seatingRating),outletRatingConverter(location.outletsRating)]}\r\n                            iconColors={[setRatingIconColor(location.wifiRating),setRatingIconColor(location.noiseRating),setRatingIconColor(location.seatingRating),setRatingIconColor(location.outletsRating)]}\r\n                            iconSize = {100}\r\n                            iconBorderWidth = {0}\r\n                            iconBorderColor = {'#dddddd'}\r\n                            iconBorderRadius = {4}\r\n                            />\r\n                        </View>\r\n                        <View style={{position:'absolute', width:24, height:24, top: 24, right: 24, borderRadius: 150, backgroundColor:\"#E14B1C\"}} />\r\n                    </View>\r\n                    <View style={styleDesktop.containerReviewFlatListLabel}>\r\n                        <TextBody text={'REVIEWS'} weight={'semiBold'} fontSize={14} color={'#444444'}/>\r\n                    </View>\r\n                </View>\r\n                </View> \r\n            }\r\n            ListFooterComponent={ <View style={styleDesktop.listFooter} />}\r\n            style = {styleDesktop.containerFlatList}\r\n            data={this.state.data}\r\n            keyExtractor={item => item.id}\r\n            renderItem={({ item }) =>\r\n                    <View style={{width:'55%', alignSelf:'flex-end'}}> \r\n                        <ReviewCard review={item}/>\r\n                    </View>\r\n            }\r\n            onEndReached={() => {this._handleLoadMore(location.id);}}\r\n            onEndReachedThreshold={0.5}\r\n            initialNumToRender={1}/>\r\n            <View style={styleDesktop.containerFloatingButtons}>\r\n                {this._createControlPanel(location)}\r\n            </View>\r\n            </SafeAreaView>\r\n        );\r\n    }\r\n\r\n    _createMainMobileBody = (location) => {\r\n        return(\r\n            <SafeAreaView style={style.containerBody}>\r\n            <FlatList\r\n            ListHeaderComponent={\r\n                <View style={styles.containerListHeader}>  \r\n                    <Image source={{uri : location.imageUri}} style={styles.displayImage} resizeMode=\"cover\" />\r\n                    <View style={styles.containerLocationInfo}>\r\n                        <TextTitle text={location.name} weight={'bold'} fontSize={24} />\r\n                        <View style={styles.containerAddress}>\r\n                            <TextBody text={location.streetAddress + \" \" + location.city + \", \" + location.state + \" \" + location.zipCode} fontSize={14} color={'#777777'}/>\r\n                        </View>\r\n                        <View style={style.divider} />\r\n                        <View style={styles.containerRatings}>\r\n                            <BarIcon \r\n                            iconNames={[wifiRatingConverter(location.wifiRating),noiseRatingCoverter(location.noiseRating),seatingRatingConverter(location.seatingRating),outletRatingConverter(location.outletsRating)]}\r\n                            iconColors={[setRatingIconColor(location.wifiRating),setRatingIconColor(location.noiseRating),setRatingIconColor(location.seatingRating),setRatingIconColor(location.outletsRating)]}\r\n                            iconSize = {60}\r\n                            iconBorderWidth = {0}\r\n                            iconBorderColor = {'#dddddd'}\r\n                            iconBorderRadius = {4}\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.containerReviewFlatListLabel}>\r\n                        <TextBody text={'REVIEWS'} weight={'semiBold'} fontSize={14} color={'#444444'}/>\r\n                    </View>\r\n                </View> \r\n            }\r\n            ListFooterComponent={ <View style={styles.listFooter} />}\r\n            style = {styles.containerFlatList}\r\n            data={this.state.data}\r\n            keyExtractor={item => item.id}\r\n            renderItem={({ item }) => \r\n                <ReviewCard review={item}/>\r\n            }\r\n            onEndReached={() => {this._handleLoadMore(location.id);}}\r\n            onEndReachedThreshold={0.5}\r\n            initialNumToRender={1}/>\r\n            <View style={styles.containerFloatingButtons}>\r\n                {this._createControlPanel(location)}\r\n            </View>\r\n            </SafeAreaView>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const { location } = this.state;\r\n        if(isDesktop){\r\n            return (this._createMainDesktopBody(location));\r\n        } else {\r\n            return (this._createMainMobileBody(location));\r\n        }\r\n    }\r\n};\r\n\r\nconst styleDesktop = StyleSheet.create({\r\n    containerBody: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#F8F7F0',\r\n    },\r\n    containerFlatList: {\r\n        position: 'absolute',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        height: '100%',\r\n        right: 0,\r\n    },\r\n    containerDisplayImage:{\r\n        width: '45%',\r\n        height: '100%',\r\n        padding: 20,\r\n        backgroundColor: \"#F8F7F0\",\r\n    },\r\n    displayImage: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: 8,\r\n        backgroundColor: \"#9DB492\",\r\n    },\r\n    containerLocationInfo: {\r\n        flexDirection: 'column',\r\n        padding: 24,\r\n        marginTop: 20,\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        borderRadius: 8,\r\n        alignItems: 'flex-start',\r\n        backgroundColor: '#fff',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 3,\r\n        },\r\n        shadowOpacity: 0.29,\r\n        shadowRadius: 4.65,\r\n        elevation: 7,\r\n    },\r\n    containerAddress: {\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n    },\r\n    containerRatings: {\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        marginTop: 4,\r\n        marginBottom: 4,\r\n        alignSelf:'center',\r\n    },\r\n    containerFloatingButtons: {\r\n        position: 'absolute',\r\n        top: 20,\r\n        left: 0,\r\n    },\r\n    containerReviewFlatListLabel: {\r\n        marginTop: 16,\r\n        marginLeft: 20,\r\n        alignItems: 'flex-start',\r\n    },\r\n    listFooter: {\r\n        height: 150\r\n    },\r\n});\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    containerFlatList: {\r\n        flexDirection: 'column',\r\n        width: width,\r\n        height: height,\r\n        alignSelf: 'center',\r\n        backgroundColor: '#F8F7F0',\r\n    },\r\n    displayImage: {\r\n        position: 'absolute',\r\n        width: displayImageWidth,\r\n        height: displayImageHeight,\r\n        marginTop: displayImageMarginTop,\r\n        alignSelf: 'center',\r\n        backgroundColor: \"#9DB492\",\r\n        borderRadius: 4,\r\n    },\r\n    containerLocationInfo: {\r\n        flexDirection: 'column',\r\n        width: containerInfoWidth,\r\n        padding: containerInfoPadding,\r\n        marginTop: hlfHeight - 50,\r\n        borderRadius: 4,\r\n        alignItems: 'flex-start',\r\n        alignSelf: 'center',\r\n        backgroundColor: '#fff',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 3,\r\n        },\r\n        shadowOpacity: 0.29,\r\n        shadowRadius: 4.65,\r\n        elevation: 7,\r\n    },\r\n    containerAddress: {\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n    },\r\n    containerRatings: {\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        marginTop: 4,\r\n        marginBottom: 4,\r\n        alignSelf:'center'\r\n    },\r\n    containerFloatingButtons: {\r\n        position: 'absolute',\r\n        top: 20,\r\n        left: 0,\r\n    },\r\n    containerReviewFlatListLabel: {\r\n        width: containerInfoWidth,\r\n        paddingTop: 12,\r\n        alignItems: 'flex-start',\r\n        alignSelf: 'center',\r\n    },\r\n    listFooter: {\r\n        height: 150\r\n    },\r\n    ratingSpacers: {\r\n        width:6\r\n    }\r\n});\r\n","import React from 'react';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport { MainNavigator } from './MainTabNavigator';\r\nimport {ViewLocationArea} from '../areas/ViewLocation';\r\n\r\nconst ProfileStack = createStackNavigator();\r\n\r\nexport function ProfileNavigator({navigator}){\r\n    return (\r\n        <ProfileStack.Navigator headerMode={'none'}>\r\n            <ProfileStack.Screen name=\"User\" component={MainNavigator}/>\r\n            <ProfileStack.Screen name=\"ViewLocation\" component={ViewLocationArea}/>\r\n        </ProfileStack.Navigator>\r\n    );\r\n}","import React from 'react';\r\nimport { ScrollView, StyleSheet, View } from 'react-native'; \r\nimport Autocomplete from 'react-native-autocomplete-input';\r\nimport { ButtonPrimary } from './ButtonPrimary';\r\n\r\nexport class AutocompleteTextInput extends React.Component {\r\n    \r\n    state = {\r\n        value: '',\r\n        hideResults: false,\r\n        data: this.props.data,\r\n        filteredData: []\r\n    };\r\n\r\n    _onChangeValue = (text) => {\r\n        this.setState({\r\n                value: text,\r\n                hideResults: false,\r\n                filteredData: this._filterData(text)\r\n            }, \r\n            () => {\r\n                this.props.onChangeText(text);\r\n            });\r\n    };\r\n\r\n    _onChangeValueClick = (text) => {\r\n        this.setState({\r\n                value: text,\r\n                hideResults: true,\r\n                filteredData: this._filterData(text)\r\n            }, \r\n            () => {\r\n                this.props.onChangeText(text);\r\n            });\r\n    };\r\n\r\n    _filterData(query){\r\n        if (query === '') {\r\n            return [];\r\n          }\r\n          const regex = new RegExp(`${query.trim()}`, 'i');\r\n          return this.state.data.filter(data => data.search(regex) >= 0);\r\n    };\r\n    \r\n    render(){\r\n        return (\r\n            <View style={styles.container}>\r\n                <Autocomplete\r\n                    style={styles.textInput}\r\n                    data={this.state.filteredData}\r\n                    autoCorrect={true}\r\n                    hideResults={this.state.hideResults}\r\n                    value={this.state.value}\r\n                    placeholder={this.props.placeholder}\r\n                    onChangeText={text => this._onChangeValue(text)}\r\n                    renderItem={({ item, i }) => (\r\n                    <ButtonPrimary\r\n                        text={item}\r\n                        buttonBorderRadius={0}\r\n                        onPress={() => this._onChangeValueClick(item)}\r\n                    />\r\n                    )}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}   \r\n\r\nconst styles =  StyleSheet.create({\r\n    container: {\r\n        width: '100%',\r\n        height: 30,\r\n        marginBottom: 20,\r\n        zIndex: 99\r\n    }, textInput: {\r\n        width: '100%',\r\n        padding: 4,\r\n        borderWidth: 1,\r\n        borderColor: '#CCDAE7',\r\n        borderRadius: 4,\r\n        backgroundColor: '#E9F0F6',\r\n    },\r\n});","import React from 'react';\r\nimport {View, TouchableOpacity} from 'react-native'; \r\n\r\nimport { default as TextBody} from '../components/TextBody';\r\nimport { ButtonPrimary } from '../components/ButtonPrimary';\r\n\r\nimport {MaterialCommunityIcons} from '@expo/vector-icons'; \r\n\r\nexport function Dialog(props){\r\n\r\n    return (\r\n        <TouchableOpacity style={{position: 'absolute', width:'100%', height:'100%', backgroundColor:'rgba(0, 0, 0, 0.4)'}} onPress={props.onDeny}>\r\n        <View style={{\r\n        ...props.styleContainer,\r\n        position: 'absolute',\r\n        width: 440,\r\n        top: '40%',\r\n        left: '50%',\r\n        marginLeft: -220,\r\n        flexDirection: 'column',        \r\n        padding: 24,\r\n        borderRadius: (props.containerBorderRadius != null) ? props.containerBorderRadius : 8,\r\n        backgroundColor: (props.containerBackgroundColor != null) ? props.containerBackgroundColor : '#FFF',\r\n        justifyContent: 'flex-start',\r\n        shadowColor: \"#222222\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 3,\r\n        },\r\n        shadowOpacity: props.hasShadow ? 0.29 : 0.0,\r\n        shadowRadius: props.hasShadow ? 4.65 : 0,\r\n        elevation: props.hasShadow ? 4 : 0, \r\n        }}>\r\n            <View style={{flexDirection:'row'}}>\r\n                <View style={{height: 32, width: 32, marginRight:12, justifyContent: 'center', alignItems:'center', backgroundColor:'rgba(0, 0, 0, 0.2)', borderRadius:1000}}>\r\n                <MaterialCommunityIcons\r\n                name={props.isAlert ? 'alert-circle-outline' : 'information-outline'}\r\n                color={(props.iconColor != null) ? props.iconColor : '#222'}\r\n                size={24}\r\n                />\r\n                </View>\r\n                <TextBody text={props.title} color={(props.titleColor != null) ? props.titleColor : '#222'} weight={(props.titleWeight != null) ? props.titleWeight : 'bold'} fontSize={30}/>\r\n            </View>\r\n            <TextBody text={props.text} style={{marginTop:8}} color={(props.textColor != null) ? props.textColor : '#AAA'} weight={(props.textWeight != null) ? props.textWeight : 'regular'} fontSize={16}/>\r\n            <View style={{flexDirection:'row', marginTop:16, justifyContent:'flex-end'}}>\r\n                <ButtonPrimary text={props.buttonDenyText} onPress={props.onDeny}/>\r\n                <ButtonPrimary text={props.buttonConfirmText} onPress={props.onConfirm} styleContainer={{marginLeft:8}}/>\r\n            </View>\r\n        </View>\r\n        </TouchableOpacity>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport {ScrollView, View, StyleSheet} from 'react-native';\r\n\r\nimport {default as TextBody} from '../components/TextBody';\r\nimport {FormTextInput} from '../components/FormTextInput';\r\nimport {ButtonPrimary} from '../components/ButtonPrimary';\r\nimport {ButtonTab} from '../components/ButtonTab';\r\nimport {AutocompleteTextInput} from '../components/AutocompleteTextInput';\r\nimport {NotificationAlert} from '../components/NotificationAlert';\r\nimport {Dialog} from '../components/Dialog';\r\n\r\nimport {getUserAuth} from '../graphql/sessionData';\r\nimport {graphqlAuth} from '../graphql/graphqlService';\r\nimport {createAddLocationBody} from '../graphql/mutations';\r\n\r\nimport style from '../styles/Container.Form.Style';\r\nimport {notEmptyCS, zipcodeCS} from '../helpers/Constraints';\r\n\r\nfunction addLocation(name, streetAdress, city, state, zipCode, navigation){\r\n\r\n    let body = createAddLocationBody(name, streetAdress, city, state, zipCode);\r\n    getUserAuth().then((token) => {graphqlAuth(token, body).then(\r\n        (result) => {\r\n            if(result.data !== null){\r\n                navigation.navigate('SearchLocations');\r\n            }\r\n        },\r\n        (error) => {\r\n        }\r\n    );});\r\n};\r\n\r\nexport function AddLocationFormArea ({navigation}){\r\n    const [name, onChangeName] = React.useState('name');\r\n    const [streetAdress, onChangeStreetAdress] = React.useState('streetAddress');\r\n    const [city, onChangeCity] = React.useState('city');\r\n    const [state, onChangeState] = React.useState('state');\r\n    const [zipCode, onChangeZipCodes] = React.useState('zipCode');\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [confirmGoBack, setConfirmGoBack] = React.useState(false);\r\n\r\n    return (\r\n        <View style={{height: '100%', backgroundColor: '#F8F7F0'}}>\r\n            <View style={[style.defaultShadow,styles.containerMain,{width:500}]}>\r\n                <TextBody text={'Add Location'} style={{marginBottom:12, letterSpacing: .3}} weight={\"bold\"} fontSize={30}/>\r\n                <TextBody text={'NAME'} stylesheet={styles.containerLabel} weight={\"semiBold\"} fontSize={12}/>\r\n                <FormTextInput \r\n                    value={name}\r\n                    onChangeText={text => onChangeName(text)}\r\n                    constraints={notEmptyCS}/>\r\n                <TextBody text={'STREET ADDRESS'} stylesheet={styles.containerLabel} weight={\"semiBold\"} fontSize={12}/>    \r\n                <FormTextInput \r\n                    value={streetAdress}\r\n                    onChangeText={text => onChangeStreetAdress(text)}\r\n                    constraints={notEmptyCS}/>\r\n                <TextBody text={'CITY'} stylesheet={styles.containerLabel} weight={\"semiBold\"} fontSize={12}/>\r\n                <FormTextInput \r\n                    value={city}\r\n                    onChangeText={text => onChangeCity(text)}\r\n                    constraints={notEmptyCS}/>\r\n                <TextBody text={'STATE'} stylesheet={styles.containerLabel} weight={\"semiBold\"} fontSize={12}/>\r\n                <AutocompleteTextInput\r\n                    value={state}\r\n                    onChangeText={text => onChangeState(text)}\r\n                    data={states}\r\n                />\r\n                <TextBody text={'ZIPCODE'} stylesheet={styles.containerLabel} weight={\"semiBold\"} fontSize={12}/>\r\n                <FormTextInput \r\n                    value={zipCode}\r\n                    onChangeText={text => onChangeZipCodes(text)}\r\n                    constraints={zipcodeCS}/>\r\n                <ButtonPrimary \r\n                    text=\"Submit\"\r\n                    onPress={() => addLocation(name, streetAdress, city, state, zipCode, navigation)}/>                  \r\n            </View>\r\n            <ButtonTab\r\n            styleContainer={{position:'absolute', top: 20, left: 0}}\r\n            iconName={\"arrow-left-bold\"}\r\n            buttonBackgroundColor={'#FFF'}\r\n            hasShadow={true}\r\n            leftTab={true}\r\n            onPress={() => {setConfirmGoBack(true)}}/>\r\n            {isLoading &&\r\n                <NotificationAlert text={\"Making a submission... please wait\"}/>\r\n            }\r\n            {confirmGoBack &&\r\n            <Dialog \r\n            title={\"Dismiss this submission?\"} \r\n            text={\"Going back will discard this submission. Are you sure you want to dismiss this submission and go back?\"} \r\n            buttonConfirmText={\"Go Back\"} \r\n            buttonDenyText={\"Cancel\"}\r\n            onConfirm={() => {navigation.goBack()}}\r\n            onDeny={() => {setConfirmGoBack(false)}} \r\n            hasShadow={true}\r\n            />\r\n            }      \r\n        </View>\r\n    );\r\n};\r\n\r\nconst states = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"District Of Columbia\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"];\r\n\r\nconst styles = StyleSheet.create({\r\n    containerMain:{\r\n        alignSelf:'center', \r\n        marginTop:60,\r\n        padding: 24,\r\n        borderRadius: 4,\r\n        backgroundColor:'#FFF'\r\n    },\r\n    containerLabel:{\r\n        marginBottom:4\r\n    }\r\n});","import React from 'react';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport {MainNavigator} from './MainTabNavigator';\r\nimport {AddLocationFormArea} from '../areas/AddLocationForm';\r\n\r\nconst AddLocationStack = createStackNavigator();\r\n\r\nexport function AddLocationNavigator({navigator}){\r\n    return (\r\n        <AddLocationStack.Navigator headerMode={'none'}>\r\n            <AddLocationStack.Screen name=\"AddLocation\" component={MainNavigator}/>\r\n            <AddLocationStack.Screen name=\"AddLocationForm\" component={AddLocationFormArea}/>\r\n        </AddLocationStack.Navigator>\r\n    );\r\n}","import React from 'react';\r\nimport { View, StyleSheet, Image, TouchableWithoutFeedback, Dimensions} from 'react-native';\r\n\r\nimport { setRatingIconColor } from '../helpers/SetRatingIconColor';\r\nimport { BarIcon } from '../components/BarIcon';\r\nimport { default as TextTitle} from '../components/TextTitle';\r\nimport { default as TextBody} from '../components/TextBody';\r\n\r\nimport { wifiRatingConverter, noiseRatingCoverter, seatingRatingConverter, outletRatingConverter, distanceConverter, resizeLocationName} from '../helpers/Converters';\r\n\r\nexport function LocationCard (props) {\r\n  const {location} = props;\r\n  const Component = () => (\r\n    <TouchableWithoutFeedback onPress={props.onPress}> \r\n      <View style={styles.containerCard}>\r\n        <Image source={{uri : location.imageUri}} style={styles.displayImage} resizeMode=\"cover\" />\r\n        <View style={styles.containerDistanceFrom}>\r\n          <TextBody text= {distanceConverter(location.distance, 2) + \" mi\"} weight={\"semiBold\"} fontSize={14}/>\r\n        </View>\r\n        <View style={styles.containerLocationInfo}>\r\n          <View style={styles.containerRatings}>\r\n            <BarIcon \r\n              iconNames={[wifiRatingConverter(location.wifiRating),noiseRatingCoverter(location.noiseRating),seatingRatingConverter(location.seatingRating),outletRatingConverter(location.outletsRating)]}\r\n              iconColors={[setRatingIconColor(location.wifiRating),setRatingIconColor(location.noiseRating),setRatingIconColor(location.seatingRating),setRatingIconColor(location.outletsRating)]}\r\n              iconSize = {24}\r\n            />\r\n          </View>\r\n          <View style={styles.containerDetails}>\r\n            <TextBody text={location.name} weight={'bold'}  fontSize={32}/>\r\n            <View style={styles.containerAddress}>\r\n                <TextBody style={{letterSpacing:0.15}} text={location.streetAddress + \" \" + location.city + \", \" + location.state + \" \" + location.zipCode} fontSize={16} color={'#777777'}/>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n  const card = React.useMemo(Component);\r\n  return (card);\r\n}\r\n\r\nconst { height, width } = Dimensions.get('window');\r\nconst cardSize = Math.min(width, height) * .9;\r\n\r\nconst styles = StyleSheet.create({\r\n  containerCard: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignSelf: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: cardSize,\r\n    height: cardSize,\r\n    margin: 8,\r\n    borderRadius: 8,\r\n    shadowColor: \"#000000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowOpacity: 0.29,\r\n    shadowRadius: 4.65,\r\n    elevation: 7,\r\n    backgroundColor: '#000000',\r\n  },\r\n  containerLocationInfo: {\r\n    position: 'absolute',\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    width: cardSize,\r\n    height: cardSize,\r\n    borderRadius: 8,\r\n    shadowColor: \"#000000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowOpacity: 0.29,\r\n    shadowRadius: 4.65,\r\n    elevation: 7,\r\n  },\r\n  containerDetails: {\r\n    width: cardSize-16,\r\n    flexDirection: 'column',\r\n    paddingHorizontal: 12,\r\n    paddingBottom: 12,\r\n    paddingTop: 8,\r\n    marginBottom: 8,\r\n    borderRadius: 4,\r\n    shadowColor: \"#000000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.23,\r\n    shadowRadius: 2.62,\r\n    elevation: 4,\r\n    backgroundColor: '#ffffff',\r\n  },\r\n  containerRatings: {\r\n    flexDirection: 'row',\r\n    paddingHorizontal: 8,\r\n    paddingTop: 4,\r\n    paddingBottom: 4,\r\n    marginLeft: 8,\r\n    marginRight: 'auto',\r\n    marginBottom: 4,\r\n    borderRadius: 4,\r\n    shadowColor: \"#000000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.23,\r\n    shadowRadius: 2.62,\r\n    elevation: 4,\r\n    backgroundColor: '#ffffff',\r\n  },\r\n  containerDistanceFrom: {\r\n    position: 'absolute',\r\n    top: 8,\r\n    left: 0,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    paddingHorizontal: 8,\r\n    paddingTop: 4,\r\n    paddingBottom: 8,\r\n    borderBottomLeftRadius: 0,\r\n    borderBottomRightRadius: 4,\r\n    borderTopLeftRadius: 0,\r\n    borderTopRightRadius: 4,\r\n    shadowColor: \"#000000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.23,\r\n    shadowRadius: 2.62,\r\n    elevation: 4,\r\n    backgroundColor: '#ffffff',\r\n  },\r\n  containerAddress: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start'\r\n  },\r\n  rating: {\r\n    flex: 1,\r\n    fontSize: 24,\r\n  },\r\n  ratingSpacers: {\r\n    width: 2,\r\n  },\r\n  displayImage: {\r\n    flex: 1,\r\n    width: cardSize,\r\n    height: cardSize,\r\n    borderRadius: 8,\r\n  }\r\n});\r\n","import React, { Component } from \"react\";\r\n\r\nimport { ButtonGroup } from 'react-native-elements';\r\n\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nexport class RatingButtonGroup extends Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            selected: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._onPress(0);\r\n    }\r\n\r\n    _onPress = (selectedIndex) => {\r\n        this.setState({selected: selectedIndex}, \r\n            this.props.onPress(this.props.ratings[selectedIndex]));\r\n    }\r\n\r\n    _createButtonGroup = (icons) => {\r\n        var buttons = [];\r\n        icons.forEach(name => {\r\n            var element = () => <MaterialCommunityIcons size={24} name={name}/>;\r\n            buttons.push({\r\n                element: element\r\n            });\r\n        });\r\n        return buttons;\r\n    };\r\n\r\n    render(){\r\n        const buttons = this._createButtonGroup(this.props.icons);\r\n        const containerWidth = this.props.containerWidth;\r\n        return(\r\n            <ButtonGroup\r\n                containerStyle={{width:containerWidth, marginLeft:0}}\r\n                selectedButtonStyle={{backgroundColor: \"#9DB492\"}}\r\n                selectedIndex={this.state.selected}\r\n                innerBorderStyle={{color:\"rgba(0, 0, 0,0.0)\", width:0}}\r\n                buttons={buttons}\r\n                onPress={this._onPress}\r\n                />\r\n        )\r\n    };\r\n}","import React from 'react';\r\nimport {View, StyleSheet} from 'react-native';\r\n\r\nimport {ButtonPrimary} from './ButtonPrimary';\r\nimport {ButtonText} from './ButtonText';\r\nimport {ButtonIcon} from './ButtonIcon';\r\nimport {FormTextInput} from './FormTextInput';\r\nimport {RatingButtonGroup} from '../components/RatingButtonGroup';\r\nimport {default as TextBody} from '../components/TextBody';\r\n\r\nimport {wifiFilterIcons, wifiFilterValues, noiseFilterIcons, noiseFilterValues, seatingFilterIcons, seatingFilterValues, outletsFilterIcons, outletsFilterValues} from '../icons/RatingIcons'; \r\n\r\nexport class ElementFilterPlate extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            wifi: this._createSelection('GTE', 'WIFI', null),\r\n            noise: this._createSelection('LTE', 'NOISE', null),\r\n            seating: this._createSelection('GTE', 'SEATING', null),\r\n            outlets: this._createSelection('GTE', 'OUTLETS', null)\r\n        };\r\n    }\r\n\r\n    _onChange = () => {\r\n        var filters = [];\r\n        if(this.state.wifi.value !== null){\r\n            filters.push({...this.state.wifi})\r\n        }\r\n        if(this.state.noise.value !== null){\r\n            filters.push({...this.state.noise})\r\n        }\r\n        if(this.state.seating.value !== null){\r\n            filters.push({...this.state.seating})\r\n        }\r\n        if(this.state.outlets.value !== null){\r\n            filters.push({...this.state.outlets})\r\n        }\r\n        this.props.onChange(filters);\r\n    };\r\n\r\n    _setWifi = (value) => {\r\n        this.setState({\r\n            wifi: this._createSelection('GTE', 'WIFI', value)\r\n        }, this._onChange);\r\n    };\r\n\r\n    _setNoise = (value) => {\r\n        this.setState({\r\n            noise: this._createSelection('LTE', 'NOISE', value)\r\n        }, this._onChange);\r\n    };\r\n    \r\n    _setSeating = (value) => {\r\n        this.setState({\r\n            seating: this._createSelection('GTE', 'SEATING', value)\r\n        }, this._onChange);\r\n    };\r\n    \r\n    _setOutlets = (value) => {\r\n        this.setState({\r\n            outlets: this._createSelection('GTE', 'OUTLETS', value)\r\n        }, this._onChange);\r\n    };\r\n\r\n    _createSelection = (operation, filter, value) => {\r\n        return {\r\n            operation: operation,\r\n            filter: filter,\r\n            value: value\r\n        };\r\n    };\r\n\r\n    render() {\r\n         return (\r\n            <View style={{flexDirection:'row', justifyContent:'center'}}>\r\n                <View style={{width:32, height:1}}/>\r\n                <View style={{flexDirection:'column'}}>\r\n                    <View style={[styles.containerPlate, {...this.props.styleContainer, width: (this.props.width != null) ? this.props.width : 500, marginBottom:16}]}>\r\n                        <TextBody style={{marginBottom:16}} text={'Search For'} weight={'bold'} fontSize={30}/>\r\n                        <FormTextInput\r\n                            onChangeText={this.props.onChangeText}\r\n                        />\r\n                        {/* <ButtonText \r\n                        styleContainer={{position:'absolute', top:16, right: 16}} \r\n                        text={'Clear'} \r\n                        fontSize={16} \r\n                        textColor={'#E14B1C'}\r\n                        /> */}\r\n                    </View>\r\n                    <View style={[styles.containerPlate, {...this.props.styleContainer, width: (this.props.width != null) ? this.props.width : 500,}]}>\r\n                        <TextBody style={{marginBottom:16}} text={'Filter For'} weight={'bold'} fontSize={30} />\r\n                        <TextBody stylesheet={styles.containerTextLabel} text={'\\\\\\\\ WIFI'} weight={'semiBold'} fontSize={12} />\r\n                        <RatingButtonGroup\r\n                        icons={wifiFilterIcons}\r\n                        ratings={wifiFilterValues}\r\n                        containerWidth={'100%'}\r\n                        onPress={this._setWifi}\r\n                        />\r\n                        <TextBody stylesheet={styles.containerTextLabel} text={'\\\\\\\\ NOISE'} weight={'semiBold'} fontSize={12} />\r\n                        <RatingButtonGroup \r\n                        icons={noiseFilterIcons}\r\n                        ratings={noiseFilterValues}\r\n                        containerWidth={'100%'}\r\n                        onPress={this._setNoise}\r\n                        />\r\n                        <TextBody stylesheet={styles.containerTextLabel} text={'\\\\\\\\ SEATING'} weight={'semiBold'} fontSize={12} />\r\n                        <RatingButtonGroup \r\n                        icons={seatingFilterIcons}\r\n                        ratings={seatingFilterValues}\r\n                        containerWidth={'100%'}\r\n                        onPress={this._setSeating}\r\n                        />\r\n                        <TextBody stylesheet={styles.containerTextLabel} text={'\\\\\\\\ OUTLETS'} weight={'semiBold'} fontSize={12} />\r\n                        <RatingButtonGroup \r\n                        icons={outletsFilterIcons}\r\n                        ratings={outletsFilterValues}\r\n                        containerWidth={'100%'}\r\n                        onPress={this._setOutlets}\r\n                        />\r\n                        <View style={styles.containerBtn}>\r\n                            <ButtonPrimary text='Search' onPress={this.props.onPress}/>\r\n                        </View>\r\n                        {/* <ButtonText \r\n                        styleContainer={{position:'absolute', top:16, right: 16}} \r\n                        text={'Clear'} \r\n                        fontSize={16} \r\n                        textColor={'#E14B1C'}\r\n                        /> */}\r\n                    </View>\r\n                </View>\r\n                <ButtonIcon\r\n                iconName={'close'}\r\n                iconColor={'#FFF'}\r\n                onPress={this.props.onClose}/>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    containerPlate: {\r\n        flexDirection: 'column',\r\n        borderRadius: 8,\r\n        alignItems: 'flex-start',\r\n        padding: 24,\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 2,\r\n        },\r\n        shadowOpacity: 0.23,\r\n        shadowRadius: 2.62,\r\n        elevation: 4,\r\n        backgroundColor: 'rgb(255, 255, 255)',\r\n    },\r\n    containerTextLabel:{\r\n        marginTop:12,\r\n        marginBottom:4\r\n    }, \r\n    containerBtn: {\r\n        width: '100%',\r\n        flexDirection: 'row-reverse',\r\n        marginTop: 12,\r\n    },\r\n});","import React, {Component} from 'react';\r\nimport {View, FlatList, StyleSheet, Dimensions, SafeAreaView, RefreshControl, Alert} from 'react-native';\r\nimport { Overlay } from 'react-native-elements';\r\nimport Modal from 'modal-react-native-web';\r\n\r\nimport {LocationCard} from '../components/LocationCard';\r\nimport { ButtonTab } from '../components/ButtonTab';\r\nimport { ElementFilterPlate } from '../components/ElementFilterPlate';\r\n\r\nimport {graphqlAuth} from '../graphql/graphqlService';\r\nimport {getUserAuth} from '../graphql/sessionData';\r\nimport {createSearchBody} from '../graphql/queries';\r\nimport * as Permissions from 'expo-permissions';\r\n\r\nimport {Linking} from 'expo';\r\n\r\nconst { height, width } = Dimensions.get('window');\r\nconst cardSize = Math.min(width, height) * .9;\r\nlet mainBackgroundColor = \"#F8F7F0\";\r\n\r\nexport class SearchLocationsArea extends Component {\r\n\r\n  state = {\r\n    data: [],\r\n    start: 0,\r\n    max: 10,\r\n    distance: 50,\r\n    isRefreshing: false,\r\n    reachedEnd: false,\r\n    filters: null,\r\n    fuzzyName: null,\r\n    showFilterPlate: false\r\n  };\r\n\r\n  constructor (props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    Linking.getInitialURL().then((data) => {\r\n      let { path, queryParams } = Linking.parse(data);\r\n      if(path.includes('ViewLocation') && queryParams.locationId !== undefined){ \r\n          this._viewLocation(queryParams.locationId);\r\n      }\r\n    });    \r\n    this._getUserPermissions()\r\n      .then((result) => {\r\n        if (result.status === 'granted'){\r\n          this._getUserLocation();\r\n        } else {\r\n          Alert.alert(result);\r\n        }\r\n      });\r\n  }\r\n\r\n  async _getUserPermissions(){\r\n    return await Permissions.askAsync(Permissions.LOCATION)\r\n  }\r\n\r\n  _getUserLocation() {\r\n    navigator.geolocation.getCurrentPosition(\r\n\t\t\tposition => {\r\n        this.setState({\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude\r\n        });\r\n        this._fetchLocations();\r\n\t\t\t},\r\n\t\t\terror => Alert.alert(error.message),\r\n\t\t\t{ enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\r\n\t\t);\r\n  }\r\n\r\n  _viewLocation = (locationId) => {\r\n    this.props.navigation.navigate('ViewLocation', {locationId: locationId})\r\n  };\r\n\r\n  _viewMap = () => {\r\n    this.props.navigation.navigate('SearchLocationsMap', {latitude: this.state.latitude, longitude: this.state.longitude})\r\n  };\r\n\r\n  _setFuzzyName = (text) => {\r\n    this.setState({fuzzyName: text});\r\n  };\r\n\r\n  _setFilters = (filters) => {\r\n    this.setState({filters: filters});  \r\n  };\r\n\r\n  _toggleShowFilterPlate = () => {\r\n    this.setState({showFilterPlate: !this.state.showFilterPlate});\r\n  };\r\n\r\n  _fetchLocations = () => {\r\n    if(this.state.reachedEnd){\r\n      return;\r\n    }\r\n    let body = createSearchBody(this.state.start, this.state.max, this.state.fuzzyName, this.state.filters, this.state.latitude, this.state.longitude, this.state.distance);\r\n    getUserAuth().then((token) => {graphqlAuth(token, body).then(\r\n      (result) => {\r\n        if(result.data === null){\r\n          return;\r\n        }\r\n        let locationsModel = result.data.getLocationNearByElastic;\r\n        let paging = locationsModel.paging;\r\n        let locations = locationsModel.locations;\r\n        if(paging.stop - paging.start !== this.state.max){\r\n          this.setState({reachedEnd: true});      \r\n        }\r\n        this.setState({\r\n          data: [...this.state.data, ...locations],\r\n          isRefreshing: false\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({isRefreshing : false});\r\n      }\r\n    );\r\n    }\r\n    );\r\n  };\r\n\r\n  _refreshLocations = () => {\r\n    this.setState({\r\n      reachedEnd: false,\r\n      isRefreshing: true,\r\n      data: [],\r\n      start: 0\r\n    },() => {\r\n      this._fetchLocations();\r\n    });\r\n  }\r\n\r\n  _handleLoadMore = () => {\r\n    this.setState(\r\n      (prevState, nextProps) => ({\r\n        start: prevState.start + this.state.max,\r\n      }),\r\n      () => {\r\n        this._fetchLocations();\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SafeAreaView style={{    \r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        height: height,\r\n        width: width,\r\n        backgroundColor: mainBackgroundColor,\r\n        }}>    \r\n        <FlatList\r\n          data={this.state.data}\r\n          removeClippedSubviews={true}\r\n          keyExtractor={item => item.id}\r\n          ListFooterComponent={ \r\n            <View style={styles.listFooter} />\r\n          }\r\n          getItemLayout={(data, index) => (\r\n            {length: cardSize, offset: cardSize * index, index}\r\n          )}\r\n          refreshControl={\r\n            <RefreshControl\r\n              refreshing={this.state.isRefreshing}\r\n              onRefresh={this._refreshLocations.bind(this)}\r\n            />\r\n          }\r\n          renderItem={({item}) => \r\n            <LocationCard\r\n              location={item}\r\n              onPress={() => this._viewLocation(item.id)}/>\r\n          }\r\n          onEndReached={this._handleLoadMore}\r\n          onEndReachedThreshold={50}\r\n          initialNumToRender={5}\r\n          windowSize={15}\r\n        />\r\n        \r\n        <View style={styles.containerButtonFloatingLeft}>\r\n        <ButtonTab\r\n          iconNameAdd={'magnify'}\r\n          iconName={'filter-variant'}\r\n          buttonBackgroundColor={'#FFFFFF'}\r\n          hasShadow={true}\r\n          leftTab={true}\r\n          onPress={() => this._toggleShowFilterPlate()}\r\n        />\r\n        <View style={{height:6}} /> \r\n        <ButtonTab\r\n          iconName={'refresh'}\r\n          buttonBackgroundColor={'#FFFFFF'}\r\n          hasShadow={true}\r\n          leftTab={true}\r\n          onPress={() => {this._refreshLocations()}}\r\n        />\r\n        <View style={{height:6}} />\r\n        <ButtonTab\r\n          iconName={'map-search'}\r\n          buttonBackgroundColor={'#FFFFFF'}\r\n          hasShadow={true}\r\n          leftTab={true}\r\n          onPress={() => {this._viewMap()}} \r\n        />\r\n        </View>\r\n        <Overlay \r\n        ModalComponent={Modal} \r\n        isVisible={this.state.showFilterPlate}\r\n        onBackdropPress={this._toggleShowFilterPlate}\r\n        backdropStyle={{backgroundColor:\"rgba(0, 0, 0, 0.7)\", borderWidth:0}}\r\n        overlayStyle={{width: (width>1000) ? '40%' : '85%', backgroundColor:'rgba(0, 0, 0, 0.0)', borderWidth:0, shadowColor:'rgba(0, 0, 0, 0.0)', shadowOpacity:0, shadowRadius:0, elevation:0}}>\r\n          <ElementFilterPlate\r\n            onPress={() => {this._refreshLocations(); this._toggleShowFilterPlate();}}  \r\n            onClose={() => {this.setState({showFilterPlate: false});}}\r\n            onChange={(filters) => this._setFilters(filters)}\r\n            onChangeText={(text) => this._setFuzzyName(text)}\r\n            />\r\n        </Overlay>\r\n      </SafeAreaView>\r\n    );\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    height: height,\r\n    width: width,\r\n    backgroundColor: '#F8F7F0',\r\n  },\r\n  containerButtonFloatingLeft: {\r\n    position: 'absolute',\r\n    top: 20,\r\n    left: 0\r\n  },\r\n  listHeader: {\r\n    height: 43\r\n  },\r\n  listFooter: {\r\n    height: 72\r\n  },\r\n});","import React from 'react';\r\nimport {View, TouchableOpacity} from 'react-native'; \r\n\r\nimport {default as TextBody} from '../components/TextBody';\r\n\r\nimport {MaterialCommunityIcons} from '@expo/vector-icons'; \r\n\r\nexport class ButtonCTA extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <TouchableOpacity \r\n            style={{\r\n                ...this.props.styleContainer,\r\n                width: (this.props.buttonSize != null) ? this.props.buttonSize : 128,\r\n                height: (this.props.iconNameAdd != null) ? ((this.props.buttonSize != null) ? this.props.buttonSize : 64) : 32,\r\n                backgroundColor: (this.props.buttonBackgroundColor != null) ? this.props.buttonBackgroundColor : 'transparent',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                borderRadius: (this.props.buttonBorderRadius != null) ? this.props.buttonBorderRadius : 4,\r\n                zIndex: 99\r\n            }}\r\n            onPress={this.props.onPress}>\r\n                <View style={{\r\n                ...this.props.styleIcon,\r\n                flexDirection: 'row',        \r\n                shadowColor: \"#222222\",\r\n                shadowOffset: {\r\n                  width: 0,\r\n                  height: 3,\r\n                },\r\n                shadowOpacity: this.props.hasShadow ? 0.29 : 0.0,\r\n                shadowRadius: this.props.hasShadow ? 4.65 : 0,\r\n                elevation: this.props.hasShadow ? 4 : 0, \r\n                }}>\r\n                    <MaterialCommunityIcons \r\n                    name={this.props.iconName} \r\n                    size={(this.props.iconSize != null) ? this.props.iconSize : 24} \r\n                    color={(this.props.iconColor != null) ? this.props.iconColor : \"#222\"}/>\r\n                    <TextBody text={this.props.text} fontSize={this.props.fontSize} weight={'semiBold'} color={'#ffffff'}/> \r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {View} from 'react-native';\r\n\r\nimport {default as TextBody} from '../components/TextBody';\r\nimport {ButtonPrimary} from '../components/ButtonPrimary';\r\nimport {ButtonCTA} from '../components/ButtonCTA';\r\n\r\nexport class AddLocationArea extends Component{\r\n\r\n    _addLocationForm = () => {\r\n        this.props.navigation.navigate('AddLocationForm');\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <View style={{\r\n            flex: 1,\r\n            backgroundColor: '#F8F7F0',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            }}>\r\n                <View style={{\r\n                flexDirection: 'column',\r\n                padding: 16,\r\n                borderRadius: 4,\r\n                alignItems: 'center',\r\n                backgroundColor: '#fff',\r\n                shadowColor: \"#000\",\r\n                shadowOffset: {\r\n                    width: 0,\r\n                    height: 3,\r\n                },\r\n                shadowOpacity: 0.29,\r\n                shadowRadius: 4.65,\r\n                elevation: 7,\r\n                }}>\r\n                    <TextBody style={{textAlign: 'center'}} text={\"Don't see your favorite location? \\n Add it here!\"} weight={\"bold\"} fontSize={32}/>\r\n                    <ButtonPrimary \r\n                    text={\"Add Location\"}\r\n                    onPress={() => this._addLocationForm()}/>\r\n                    {/* <ButtonCTA\r\n                    iconName={\"account\"}\r\n                    iconColor={'#FFF'} \r\n                    text={\"Add Location\"}\r\n                    hasShadow={false}\r\n                    buttonBackgroundColor={'#222'}\r\n                    onPress={() => this._addLocationForm()}/> */}\r\n                </View>   \r\n            </View>\r\n        );\r\n    };\r\n};\r\n","import React,{Component} from 'react';\r\nimport {View, StyleSheet, Dimensions, FlatList} from 'react-native';\r\n\r\nimport {ButtonIcon} from '../components/ButtonIcon';\r\nimport {default as TextBody} from '../components/TextBody';\r\nimport {ReviewCard} from '../components/ReviewCard';\r\nimport {MenuToggleable} from '../components/MenuToggleable';\r\nimport {MenuToggleableItem} from '../components/MenuToggleableItem';\r\nimport {NotificationAlert} from '../components/NotificationAlert';\r\nimport {Dialog} from '../components/Dialog';\r\n\r\nimport {graphqlAuth} from '../graphql/graphqlService';\r\nimport {createGetReviewsByUserIdBody} from '../graphql/queries' \r\nimport {getUserAuth, getUserEmail, getUserId} from '../graphql/sessionData'; \r\nimport {AuthContext} from '../context/Authentication';\r\n\r\nconst { height, width } = Dimensions.get('window');\r\n\r\nlet containerMainHorizontalMargins;\r\nlet containerMainWidth;\r\n\r\nexport class ProfileArea extends Component {\r\n    static contextType = AuthContext;\r\n\r\n    state = {\r\n        userId: \"\",\r\n        userEmail: \"\",\r\n        start: 0,\r\n        data: [],\r\n        max: 10,\r\n        reachedEnd: false,\r\n        menuVisible: false, \r\n        isError: false,\r\n        confirmLogOut: false,\r\n    };\r\n\r\n    componentDidMount(){\r\n        this._populateUserInformation();\r\n    }\r\n\r\n    _populateUserInformation = () => {\r\n        getUserEmail().then(\r\n            (result) => {\r\n                this.setState({userEmail: result}); \r\n            }\r\n        );\r\n        getUserId().then(\r\n            (userIdFromSession) => {\r\n                this.setState({userId: userIdFromSession}, \r\n                this._getUserReviews());\r\n                \r\n            }\r\n        );\r\n    }\r\n\r\n    _getUserReviews = () => {\r\n        if(this.state.reachedEnd){\r\n            return;\r\n        }\r\n        getUserAuth().then((token) => {\r\n            let body = createGetReviewsByUserIdBody(this.state.start, this.state.max, this.state.userId);\r\n            graphqlAuth(token, body).then((result) => {\r\n                if(result.data === null){\r\n                    return;\r\n                }\r\n                let reviewsModel = result.data.getReviewsByUserId;\r\n                let reviews = reviewsModel.reviews;\r\n                let paging = reviewsModel.paging;\r\n                if(paging.stop - paging.start !== this.state.max){\r\n                    this.setState({reachedEnd: true});      \r\n                }\r\n                this.setState({\r\n                    data: [...this.state.data, ...reviews],\r\n                    start: paging.stop\r\n                });\r\n            });\r\n        })\r\n    }\r\n    \r\n    _viewLocation = (locationId) => {\r\n        this.props.navigation.navigate('ViewLocation', {locationId: locationId})\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <View style={{width:width,height:height}}>\r\n                <FlatList\r\n                ListHeaderComponent={\r\n                    <View>\r\n                        <View style={styles.containerMain}>\r\n                            <>\r\n                            <ButtonIcon\r\n                            styleContainer={{position:'absolute', top: 16, right: 16}}\r\n                            iconName={'dots-vertical'}\r\n                            iconSize={24}\r\n                            hasShadow={false}\r\n                            onPress={() => {\r\n                                if(!this.state.menuVisible){\r\n                                    this.setState({menuVisible: true});\r\n                                } else {\r\n                                    this.setState({menuVisible: false});\r\n                                }\r\n                            }} />\r\n                            </>\r\n                            <View style={{flexDirection:'row'}}>\r\n                            <TextBody text={\"Hello, \"} weight={'bold'} fontSize={30}/>\r\n                            <TextBody text={this.state.userId} weight={'semiBold'} fontSize={30} color={'#59806a'}/>\r\n                            </View>\r\n                            <TextBody text={this.state.userEmail} fontSize={16} color={'#BBB'}/>\r\n                        </View>\r\n                        <View style={{marginTop:16,marginLeft:containerMainHorizontalMargins}}>\r\n                                <TextBody text={\"MY REVIEWS\"} weight={'semiBold'} fontSize={16}/>\r\n                        </View>\r\n                    </View>\r\n                }\r\n                style = {styles.containerFlatList}\r\n                data={this.state.data}\r\n                keyExtractor={item => item.id}\r\n                renderItem={({ item }) => \r\n                    <ReviewCard review={item} margin={containerMainHorizontalMargins} onPress={() => this._viewLocation(item.locationId)}/>\r\n                }\r\n                onEndReached={() => {this._getUserReviews();}}\r\n                onEndReachedThreshold={50}\r\n                initialNumToRender={5}\r\n                ListFooterComponent={ <View style={styles.listFooter} />}\r\n                />\r\n                {this.state.isError &&\r\n                    <NotificationAlert translateBy={130} text={\"No about page, yet.\"} onPress={() => {this.setState({isError: false})}}/>\r\n                }\r\n                {this.state.menuVisible &&\r\n                    <MenuToggleable \r\n                    onClose={() => {this.setState({menuVisible: false})}}\r\n                    styleContainer={{right:containerMainHorizontalMargins+8, top: 76}}\r\n                    menuItems={\r\n                        <>\r\n                        <MenuToggleableItem itemDelay={0} itemIcon={\"settings\"} itemText={\"Options\"} onMenuItemPress={() => {}}/>\r\n                        <View style={{height:12}}/>\r\n                        <MenuToggleableItem itemDelay={50} itemIcon={\"information-outline\"} itemText={\"About\"} onMenuItemPress={() => {}}/>\r\n                        <View style={{height:12}}/>\r\n                        <MenuToggleableItem itemDelay={100} itemIcon={\"logout-variant\"} itemText={\"Logout\"} onMenuItemPress={() => {this.setState({confirmLogOut:true})}}/>\r\n                        </>\r\n                    }\r\n                    />\r\n                }\r\n                {this.state.confirmLogOut &&\r\n                    <Dialog \r\n                    title={\"Log out?\"} \r\n                    text={\"Are you sure you want to log out?\"} \r\n                    buttonConfirmText={\"Log out\"} \r\n                    buttonDenyText={\"Cancel\"}\r\n                    onConfirm={() => {this.context.logout()}}\r\n                    onDeny={() => {this.setState({confirmLogOut:false})}} \r\n                    hasShadow={true}\r\n                    />\r\n                }\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nfunction choseStyle(width){\r\n    if(width > 1000){\r\n        containerMainHorizontalMargins = ((width - (width - 200)) / 2)\r\n    } else {\r\n        containerMainHorizontalMargins = ((width - (width - 30)) / 2)\r\n    }\r\n    containerMainWidth = (width - (containerMainHorizontalMargins));\r\n  }\r\n\r\nchoseStyle(width);\r\n\r\nconst styles = StyleSheet.create({\r\n    containerMain: {\r\n        borderRadius: 4,\r\n        marginLeft: containerMainHorizontalMargins,\r\n        marginRight: containerMainHorizontalMargins,\r\n        marginTop: 20,\r\n        padding: 16,\r\n        backgroundColor: '#FFF',\r\n        shadowColor: \"#333333\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 3,\r\n        },\r\n        shadowOpacity: 0.26,\r\n        shadowRadius: 6.62,\r\n        elevation: 6,\r\n    },    \r\n    containerFlatList: {\r\n        flexDirection: 'column',\r\n        width: width,\r\n        height: height,\r\n        alignSelf: 'center',\r\n        backgroundColor: '#F8F7F0',\r\n    }, listFooter: {\r\n        height: 150\r\n    },\r\n});\r\n\r\n","import React from 'react';\r\nimport {Dimensions} from 'react-native';\r\n\r\nimport {ProfileNavigator} from './ProfileStackNavigator';\r\nimport {AddLocationAreaNavigator} from './AddLocationStackNavigator';\r\nimport {SearchLocationsArea} from '../areas/SearchLocations';\r\nimport {AddLocationArea} from '../areas/AddLocation';\r\nimport {ProfileArea} from '../areas/Profile';\r\n\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\r\n\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst { height, width } = Dimensions.get('window');\r\n\r\nlet tabNavMargins;\r\n\r\nfunction choseStyle(width){\r\n    if(width > 1000){\r\n      tabNavMargins = ((width - (width - 200)) / 2)\r\n    } else {\r\n      tabNavMargins = ((width - (width - 30)) / 2);\r\n    }\r\n  }\r\n\r\nchoseStyle(width);\r\n\r\nexport function MainNavigator({navigator}){\r\n\r\n    const tabBarStyle = {\r\n      position: 'absolute',\r\n      left: tabNavMargins,\r\n      right: tabNavMargins,\r\n      bottom: 0,\r\n      marginBottom: 16,\r\n      border: 'none',\r\n      borderRadius: 4,\r\n      shadowColor: \"#333333\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 3,\r\n      },\r\n      shadowOpacity: 0.26,\r\n      shadowRadius: 6.62,\r\n      elevation: 8,\r\n      backgroundColor: '#ffffff',};\r\n\r\n    return (\r\n        <Tab.Navigator\r\n            name=\"HomeTabs\"\r\n            initialRouteName=\"Home\"\r\n            tabBarOptions={{\r\n              showLabel: false,\r\n              keyboardHidesTabBar: true,\r\n              style: tabBarStyle,\r\n            }}>\r\n            <Tab.Screen name=\"Profile\" options={{\r\n                tabBarIcon: ({focused, color, size }) => (<MaterialCommunityIcons name={focused ? 'account' : 'account-outline'} size={24} color={\"#222222\"} />)\r\n              }} component={ProfileArea}/>\r\n            <Tab.Screen name=\"Home\" options={{\r\n                tabBarIcon: ({focused, color, size }) => (<MaterialCommunityIcons name={focused ? 'home' : 'home-outline'} size={24} color={\"#222222\"} />)\r\n              }} component={SearchLocationsArea}/>\r\n            <Tab.Screen name=\"AddLocation\" options={{\r\n                unmountOnBlur: true,\r\n                tabBarIcon: ({focused, color, size }) => (<MaterialCommunityIcons name={focused ? 'plus-circle' : 'plus-circle-outline'} size={24} color={\"#222222\"} />)\r\n              }} component={AddLocationArea}/>\r\n        </Tab.Navigator>\r\n    );\r\n}","import React, {Component} from 'react';\r\nimport {View, Dimensions, StyleSheet, Text} from 'react-native';\r\nimport {Map, Marker, Popup, TileLayer} from 'react-leaflet';\r\nimport {Overlay} from 'react-native-elements';\r\nimport Modal from 'modal-react-native-web';\r\nimport Control from 'react-leaflet-control';\r\n\r\nimport {setRatingIconColor} from '../helpers/SetRatingIconColor';\r\nimport {ButtonTab} from '../components/ButtonTab';\r\nimport {ElementFilterPlate} from '../components/ElementFilterPlate';\r\nimport {BarIcon} from '../components/BarIcon';\r\n\r\nimport {graphqlAuth} from '../graphql/graphqlService';\r\nimport {getUserAuth} from '../graphql/sessionData';\r\nimport {createSearchBody} from '../graphql/queries';\r\n\r\nimport {wifiRatingConverter, seatingRatingConverter, noiseRatingCoverter, outletRatingConverter, distanceConverter} from '../helpers/Converters';\r\n\r\n\r\nexport class SearchLocationsMapArea extends Component {\r\n\r\n  state = {\r\n    data: [],\r\n    filters: null,\r\n    fuzzyName: null,\r\n    index: 0,\r\n    popup: null,\r\n    zoom: 13,\r\n    latitude: 0,\r\n    longitude: 0,\r\n    isClickableTimeout: 1000,\r\n    isClickable: false,\r\n    showFilterPlate: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      popup: React.createRef(),\r\n      latitude: this.props.route.params.latitude,\r\n      longitude: this.props.route.params.longitude      \r\n    }, () => {\r\n      this._fetchLocations();\r\n      setTimeout(() => {this._toggleIsClickable()}, this.state.isClickableTimeout);\r\n    })\r\n  }\r\n\r\n  _toggleIsClickable = () => {\r\n    this.setState({isClickable: !this.state.isClickable});  \r\n  }\r\n\r\n  _fetchLocations = () => {\r\n    let body = createSearchBody(0, 50, this.state.fuzzyName, this.state.filters, this.state.latitude, this.state.longitude, 250);\r\n    getUserAuth().then((token) => {graphqlAuth(token, body).then(\r\n      (result) => {\r\n        if(result.data === null){\r\n          return;\r\n        }\r\n        let locationsModel = result.data.getLocationNearByElastic;\r\n        let locations = locationsModel.locations;\r\n        this.setState({\r\n          data: [...this.state.data, ...locations],\r\n        });\r\n      },\r\n      (error) => {\r\n        Alert.alert(error.message);\r\n      });\r\n    });\r\n  };\r\n\r\n  _updateLocation = (viewport) => {\r\n    this.setState({\r\n      latitude: viewport.center[0],\r\n      longitude: viewport.center[1],\r\n      zoom: viewport.zoom\r\n    });\r\n  };\r\n\r\n  _handleZoom = () => {\r\n    this._closePopup();\r\n  };\r\n\r\n  _handleDrag = () => {\r\n    this._closePopup();\r\n  };\r\n\r\n  _closePopup = () => {\r\n    if(this.state.popup.current !== null){\r\n      this.state.popup.current.leafletElement.options.leaflet.map.closePopup();\r\n    }\r\n  }\r\n\r\n  _refreshLocations = () => {\r\n    this.setState({\r\n      data: []\r\n    }, () => {\r\n      this._fetchLocations()\r\n    });\r\n  };\r\n\r\n  _viewList = () => {\r\n    if(this.state.isClickable){\r\n      this.props.navigation.goBack();\r\n    }\r\n  };\r\n\r\n  _viewLocation = () => {\r\n    this.props.navigation.navigate('ViewLocation', {locationId: this.state.data[this.state.index].id});\r\n  };\r\n\r\n  _setFuzzyName = (text) => {\r\n    this.setState({fuzzyName: text});\r\n  };\r\n\r\n  _setFilters = (filters) => {\r\n    this.setState({filters: filters});  \r\n  };\r\n\r\n  _toggleShowFilterPlate = () => {\r\n    this.setState({showFilterPlate: !this.state.showFilterPlate});\r\n  };\r\n\r\n  _createMarker = (location, index) => {\r\n    return (\r\n      <Marker\r\n        key={location.id}\r\n        position={[\r\n          location.latitude,\r\n          location.longitude\r\n        ]}\r\n        onClick={() => {\r\n          let popup =  React.createRef();\r\n          this.setState({\r\n            index: index, \r\n            popup: popup\r\n          })\r\n        }}\r\n      >\r\n        <Popup ref={this.state.popup} autoPan={false}>\r\n          <div style={{cursor: 'pointer'}} onClick={() => {this._viewLocation()}}>\r\n            <View style={styles.containerLocationInfo}>\r\n              <View style={styles.containerRow}>\r\n                <Text style={styles.labelDistance}>{distanceConverter(location.distance, 2)}mi</Text>\r\n              </View>\r\n              <View style={styles.containerRow}>\r\n                <Text style={styles.labelLocationName}>{location.name}</Text>\r\n              </View>\r\n              <View style={styles.containerRow}>\r\n                <BarIcon \r\n                  iconNames={[wifiRatingConverter(location.wifiRating),noiseRatingCoverter(location.noiseRating),seatingRatingConverter(location.seatingRating),outletRatingConverter(location.outletsRating)]}\r\n                  iconColors={[setRatingIconColor(location.wifiRating),setRatingIconColor(location.noiseRating),setRatingIconColor(location.seatingRating),setRatingIconColor(location.outletsRating)]}\r\n                />\r\n              </View>\r\n            </View>\r\n          </div>\r\n        </Popup>\r\n      </Marker>);\r\n  };\r\n\r\n  render() {     \r\n    const {height, width} = Dimensions.get('window');\r\n    return (\r\n      <View style={{\r\n        flex: 1,\r\n        flexDirection: 'column'\r\n      }}>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://unpkg.com/leaflet@1.6.0/dist/leaflet.css\"\r\n          integrity=\"sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==\"\r\n          crossOrigin=\"\"\r\n        />\r\n        <Map\r\n          center={[this.state.latitude, this.state.longitude]}\r\n          zoom={this.state.zoom}\r\n          zoomControl={false}\r\n          onViewportChange={this._updateLocation}\r\n          maxZoom={16}\r\n          minZoom={10}\r\n          style={{ \r\n            height: height,\r\n            width: '100%'\r\n          }}\r\n        >\r\n          {this.state.data.map((location, index) => this._createMarker(location, index))}\r\n          <TileLayer  \r\n              url='https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}?access_token=sk.eyJ1IjoidHJmb3JrbmVyIiwiYSI6ImNrY2llajEzbDBnYXcyeG1paHJ5MGd1cnQifQ.wsVkXLkINZUSGOrQctnbow'\r\n              attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\r\n            />\r\n          <Control position='topleft'>\r\n            <View style={{\r\n                marginTop: 10,\r\n                marginLeft: -10,\r\n                flexDirection: 'column'\r\n            }}>\r\n              <div onClick={() => this._toggleShowFilterPlate()}>\r\n                <ButtonTab\r\n                  iconNameAdd={'magnify'}\r\n                  iconName={'filter-variant'}\r\n                  buttonBackgroundColor={'#FFFFFF'}\r\n                  hasShadow={true}\r\n                  leftTab={true}\r\n                />\r\n              </div>\r\n              <View style={{height:6}} />              \r\n              <div onClick={() => this._refreshLocations()}>\r\n                <ButtonTab \r\n                  iconName={'refresh'}\r\n                  buttonBackgroundColor={'#FFFFFF'}\r\n                  hasShadow={true}\r\n                  leftTab={true}\r\n                />              \r\n              </div>\r\n              <View style={{height:6}} />              \r\n              <div onClick={() => this._viewList()}>\r\n                <ButtonTab \r\n                  iconName={'format-list-bulleted'}\r\n                  buttonBackgroundColor={'#FFFFFF'}\r\n                  hasShadow={true}\r\n                  leftTab={true}\r\n                />              \r\n              </div>\r\n            </View>\r\n          </Control>\r\n        </Map>\r\n        <Overlay \r\n        ModalComponent={Modal} \r\n        isVisible={this.state.showFilterPlate} \r\n        onBackdropPress={() => {this._toggleShowFilterPlate();}}\r\n        backdropStyle={{backgroundColor:\"rgba(0, 0, 0, 0.7)\", borderWidth:0}}\r\n        overlayStyle={{width: (width>1000) ? '40%' : '85%', backgroundColor:'rgba(0, 0, 0, 0.0)', borderWidth:0, shadowColor:'rgba(0, 0, 0, 0.0)', shadowOpacity:0, shadowRadius:0, elevation:0}}>\r\n          <ElementFilterPlate\r\n            onPress={() => {this._refreshLocations(); this._toggleShowFilterPlate();}} \r\n            onClose={() => {this._toggleShowFilterPlate();}} \r\n            onChange={(filters) => this._setFilters(filters)}\r\n            onChangeText={(text) => this._setFuzzyName(text)}\r\n          />\r\n        </Overlay>\r\n      </View>\r\n\r\n    );\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  containerLocationInfo: {\r\n    flexDirection: 'column',\r\n    borderRadius: 4,\r\n    alignItems: 'flex-start',\r\n    alignSelf: 'center',\r\n    backgroundColor: '#fff',\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowOpacity: 0.29,\r\n    shadowRadius: 4.65,\r\n    elevation: 7,\r\n  },\r\n  containerAddress: {\r\n    flexDirection: 'column',\r\n    textAlign: 'left'\r\n  },\r\n  containerRow: {\r\n    flexDirection: 'row',\r\n    textAlign: 'left',\r\n    padding: 6\r\n  },\r\n  labelLocationName: {\r\n    fontWeight: '700',\r\n  },\r\n  labelDistance: {\r\n    fontWeight: '600',\r\n  },\r\n});","import React, { Component } from 'react';\r\nimport {View, Text, Image, StyleSheet} from 'react-native';\r\n\r\nimport {default as TextBody} from '../components/TextBody';\r\n\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport Constants from 'expo-constants';\r\nimport * as Permissions from 'expo-permissions';\r\nimport Carousel from 'react-native-snap-carousel';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nexport class AddReviewImageArea extends Component {\r\n    state = {\r\n        index: 0,\r\n        max: 3,\r\n        images: [null, null, null]\r\n    };\r\n\r\n    componentWillMount(){\r\n        this._onUpdate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n            <Carousel\r\n                layout='default'\r\n                ref={(c) => { this._carousel = c; }}\r\n                data={this.state.images}\r\n                renderItem={this._renderItem}\r\n                sliderWidth={ 500 }\r\n                itemWidth={ 300 }\r\n                onSnapToItem={ index => this.setState({index:index}) }\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._getPermissionAsync();\r\n    }\r\n\r\n    _renderItem = ({item, index}) => {\r\n        return (\r\n            <View style={{\r\n                backgroundColor:'#222',\r\n                borderRadius: 5,\r\n                height: 300}}>\r\n                {\r\n                    item !== null ? \r\n                    (this._createImageView(item)) : \r\n                    (this._createAddImage())\r\n                }\r\n            </View>\r\n        );\r\n    }\r\n\r\n    _createImageView = (item) => {\r\n        return (\r\n            <View style={styles.container}>\r\n                <View>\r\n                    <Image source={{ uri: item.uri }} style={{ width: 300, height: 300 }} />    \r\n                </View>\r\n                <View style={styles.elevated}>\r\n                    <MaterialCommunityIcons name=\"close-circle\" onPress={this._removeImage} />\r\n                </View>\r\n            </View>\r\n        );\r\n    };\r\n\r\n    _createAddImage = () => {\r\n        return (\r\n            <View style={styles.card}>\r\n                <MaterialCommunityIcons name=\"plus-circle\" title=\"Pick an image from camera roll\" color={'#FFF'} size={24} onPress={this._pickImage} />\r\n                <TextBody text={\"Add an image\"} color={\"#FFF\"}/>\r\n            </View>\r\n        );\r\n    };\r\n\r\n    _getPermissionAsync = async () => {\r\n        if (Constants.platform.ios || Constants.platform.android) {\r\n            const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n            if (status !== 'granted') {\r\n                alert('Sorry, we need camera roll permissions to make this work!');\r\n            }\r\n        }\r\n    };\r\n\r\n    _pickImage = async () => {\r\n        try {\r\n            let result = await ImagePicker.launchImageLibraryAsync({\r\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                allowsEditing: true,\r\n                aspect: [1, 1],\r\n                quality: 1,\r\n            });\r\n            if (!result.cancelled) {\r\n                const newImages = [...this.state.images];\r\n                newImages[this.state.index] = result;\r\n                this.setState({\r\n                    images: newImages \r\n                }, this._onUpdate);\r\n            }\r\n        } catch (E) {\r\n            alert('Sorry, we need camera roll permissions to make this work!');\r\n        }\r\n    };\r\n\r\n    _removeImage = () => {\r\n        const newImages = [...this.state.images];\r\n        newImages[this.state.index] = null;\r\n        this.setState({\r\n            images: newImages \r\n        }, this._onUpdate);\r\n    };\r\n\r\n    _onUpdate = () => {\r\n        this.props.onChange(this.state.images);\r\n    };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'column'\r\n    },\r\n    card: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    elevated: {\r\n        ...StyleSheet.absoluteFillObject,\r\n        alignSelf: 'flex-end'\r\n    }\r\n  });","import React from 'react';\r\nimport {ScrollView, View, Alert, StyleSheet, Dimensions} from 'react-native';\r\n\r\nimport {FormTextInput} from '../components/FormTextInput';\r\nimport {ButtonPrimary} from '../components/ButtonPrimary';\r\nimport {default as TextTitle} from '../components/TextTitle';\r\nimport {default as TextBody} from '../components/TextBody';\r\nimport {AddReviewImageArea} from './AddReviewImage'\r\nimport {RatingButtonGroup} from '../components/RatingButtonGroup';\r\nimport {ButtonTab} from '../components/ButtonTab';\r\nimport {Dialog} from '../components/Dialog';\r\n\r\nimport {getUserAuth} from '../graphql/sessionData';\r\nimport {graphqlAuth,imageAuth} from '../graphql/graphqlService';\r\nimport {createAddReviewBody} from '../graphql/mutations';\r\nimport {reviewTitleCS, reviewBodyCS} from '../helpers/Constraints';\r\n\r\nimport {wifiIcons, wifiValues, noiseIcons, noiseValues, seatingIcons, seatingValues, outletsIcons, outletsValues} from '../icons/RatingIcons';\r\nimport style from '../styles/Container.Form.Style'; \r\n\r\n\r\nconst { height, width } = Dimensions.get('window');\r\nconst trdWidth = (width/3);\r\n\r\nlet containerMainWidth;\r\n\r\n\r\nfunction addImage(token, image, locationId, reviewId){\r\n    if (image === null){\r\n        return;\r\n    }\r\n    imageAuth(token, image, locationId, reviewId).then(\r\n        (result) => {\r\n            if(result.data === null){\r\n                return;\r\n            }\r\n        },\r\n        (error) => {\r\n            Alert.alert(error);\r\n        }\r\n    );\r\n};\r\n\r\nfunction addReview(locationId, noise, wifi, seating, outlets, title, review, images, navigation){\r\n    let body = createAddReviewBody(locationId, noise, wifi, seating, outlets, title, review);\r\n    getUserAuth().then((token) => {graphqlAuth(token, body).then(\r\n        (result) => {\r\n            if(result.data === null){\r\n                return;\r\n            }\r\n            images.forEach(image => {\r\n                addImage(token, image, locationId, result.data.createNewReview.id);\r\n            });\r\n            navigation.goBack();\r\n        },\r\n        (error) => {\r\n            Alert.alert(error);\r\n        }\r\n    );});\r\n};\r\n\r\nfunction titleFontSize(width){\r\n    return width>1000 ? 42 : 30\r\n};\r\n\r\nfunction bodyFontSize(width){\r\n    return width>1000 ? 18 : 14\r\n};\r\n\r\nexport function AddReviewArea ({route, navigation}){\r\n    const {locationId, locationName} = route.params;\r\n    const [noise, onChangeNoise] = React.useState('noise');\r\n    const [wifi, onChangeWifi] = React.useState('wifi');\r\n    const [seating, onChangeSeating] = React.useState('seating');\r\n    const [outlets, onChangeOutlets] = React.useState('outlets');\r\n    const [title, onChangeTitle] = React.useState('title');\r\n    const [review, onChangeReview] = React.useState('review');\r\n    const [images, onChangeImages] = React.useState('images');\r\n    const [confirmGoBack, setConfirmGoBack] = React.useState(false);\r\n\r\n    return (\r\n        <>\r\n        <ScrollView style={styles.containerBody}>\r\n            <View style={styles.containerMain}>\r\n                <TextBody text={\"Write your review for\"} />\r\n                <TextTitle text={locationName} weight={'bold'} fontSize={titleFontSize(width)} />\r\n                <View style={style.containerTextInputLabels}>\r\n                    <TextBody text={'Title'} weight={'semiBold'} />\r\n                </View>  \r\n                <FormTextInput \r\n                    value={title}\r\n                    onChangeText={text => onChangeTitle(text)}\r\n                    constraints={reviewTitleCS}/>\r\n                <View style={style.containerTextInputLabels}>\r\n                <TextBody text={\"WIFI\"} weight={'semiBold'} fontSize={bodyFontSize(width)} />\r\n                </View>  \r\n                <RatingButtonGroup \r\n                    icons={wifiIcons}\r\n                    ratings={wifiValues}\r\n                    containerWidth={'100%'}\r\n                    onPress={onChangeWifi}/>\r\n                <View style={style.containerTextInputLabels}>\r\n                <TextBody text={\"NOISE\"} weight={'semiBold'} fontSize={bodyFontSize(width)} />\r\n                </View>  \r\n                <RatingButtonGroup \r\n                    icons={noiseIcons}\r\n                    ratings={noiseValues}\r\n                    containerWidth={'100%'}\r\n                    onPress={onChangeNoise}/>\r\n                <View style={style.containerTextInputLabels}>\r\n                <TextBody text={\"SEATING\"} weight={'semiBold'} fontSize={bodyFontSize(width)} />\r\n                </View>  \r\n                <RatingButtonGroup \r\n                    icons={seatingIcons}\r\n                    ratings={seatingValues}\r\n                    containerWidth={'100%'}\r\n                    onPress={onChangeSeating}/>\r\n                <View style={style.containerTextInputLabels}>\r\n                <TextBody text={\"OUTLETS\"} weight={'semiBold'} fontSize={bodyFontSize(width)} />\r\n                </View>                     \r\n                <RatingButtonGroup \r\n                    icons={outletsIcons}\r\n                    ratings={outletsValues}\r\n                    containerWidth={'100%'}\r\n                    onPress={onChangeOutlets}/>\r\n                <View style={style.containerTextInputLabels}>\r\n                    <TextBody text={'Review Body'} weight={'semiBold'} />\r\n                </View>                  \r\n                <FormTextInput \r\n                    isMultiline={true}\r\n                    numberOfLines={6}\r\n                    value={review}\r\n                    onChangeText={text => onChangeReview(text)}\r\n                    constraints={reviewBodyCS}/>\r\n                <AddReviewImageArea\r\n                onChange={onChangeImages}/>\r\n                <ButtonPrimary \r\n                    text=\"Submit\"\r\n                    onPress={() => addReview(locationId, noise, wifi, seating, outlets, title, review, images, navigation)}/>\r\n           </View>         \r\n        </ScrollView>\r\n        <ButtonTab\r\n        styleContainer={{position:'absolute', top: 20, left: 0}}\r\n        iconName={\"arrow-left-bold\"}\r\n        buttonBackgroundColor={'#FFF'}\r\n        hasShadow={true}\r\n        leftTab={true}\r\n        onPress={() => {\r\n            if(!confirmGoBack){\r\n                setConfirmGoBack(true)\r\n            }\r\n        }}/>\r\n        {confirmGoBack &&\r\n            <Dialog \r\n            title={\"Dismiss this review?\"} \r\n            text={\"Going back will discard this review. Are you sure you want to dismiss this review and go back?\"} \r\n            buttonConfirmText={\"Go Back\"} \r\n            buttonDenyText={\"Cancel\"}\r\n            onConfirm={() => {navigation.goBack()}}\r\n            onDeny={() => {setConfirmGoBack(false)}} \r\n            hasShadow={true}\r\n            />\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nfunction choseStyle(width){\r\n    if(width > 1000){\r\n      containerMainWidth = trdWidth\r\n    } else {\r\n      containerMainWidth = width - 40\r\n    }\r\n  }\r\n  \r\nchoseStyle(width);\r\n\r\nconst styles = StyleSheet.create({\r\n    containerBody: {\r\n        backgroundColor: '#F8F7F0',\r\n        width: width,\r\n        height: height,\r\n        paddingBottom: 130\r\n    },\r\n    containerMain: {\r\n        width: containerMainWidth,\r\n        flexDirection: 'column',\r\n        margin: 20,\r\n        padding: 16,\r\n        borderRadius: 4,\r\n        alignSelf: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 3,\r\n        },\r\n        shadowOpacity: 0.29,\r\n        shadowRadius: 4.65,\r\n        elevation: 7,\r\n      },\r\n});","import React from 'react';\r\nimport {View, Text} from 'react-native';\r\nimport {FormTextInput} from '../components/FormTextInput';\r\nimport {ButtonPrimary} from '../components/ButtonPrimary';\r\nimport {getUserAuth} from '../graphql/sessionData';\r\nimport {graphqlAuth} from '../graphql/graphqlService';\r\nimport {createReportLocationBody, createReportReviewBody} from '../graphql/mutations';\r\nimport style from '../styles/Container.Form.Style';\r\nimport {notEmptyCS} from '../helpers/Constraints';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport {ButtonTab} from '../components/ButtonTab';\r\n\r\nfunction reportLocation(navigation, locationId, reason){\r\n    let body = createReportLocationBody(locationId, reason);\r\n    getUserAuth().then((token) => {graphqlAuth(token, body).then(\r\n        (result) => {\r\n            if(result.data !== null){\r\n                navigation.goBack();\r\n            }\r\n        },\r\n        (error) => {\r\n            //do nothing\r\n        }\r\n    );});\r\n};\r\n\r\nfunction reportReview(navigation, locationId, reviewId, reason){\r\n    let body = createReportReviewBody(locationId, reviewId, reason);\r\n    getUserAuth().then((token) => {graphqlAuth(token, body).then(\r\n        (result) => {\r\n            if(result.data !== null){\r\n                navigation.goBack();\r\n            }\r\n        },\r\n        (error) => {\r\n            //do nothing\r\n        }\r\n    );});\r\n};\r\n\r\nexport function ReportLocationArea ({navigation, route}){\r\n    const {locationId} = route.params;\r\n    const [reason, onChangeReason] = React.useState('reason');\r\n    return (\r\n        <View style={style.containerBody}>            \r\n            <ButtonTab\r\n            styleContainer={{position:'absolute', top: 20, left: 0}}\r\n            iconName={\"arrow-left-bold\"}\r\n            buttonBackgroundColor={'#FFF'}\r\n            hasShadow={true}\r\n            leftTab={true}\r\n            onPress={() => navigation.goBack()}/>\r\n            <View style={style.containerMain}>\r\n                <View style={style.containerTextInputLabels}>\r\n                    <Text style={style.textLabel}>Reason</Text>\r\n                </View>  \r\n                <FormTextInput \r\n                    value={name}\r\n                    onChangeText={reason => onChangeReason(reason)}\r\n                    constraints={notEmptyCS}/>\r\n                <ButtonPrimary \r\n                    text=\"Report Location\"\r\n                    onPress={() => reportLocation(navigation, locationId, reason)}/>\r\n            </View>        \r\n        </View>\r\n    );\r\n};\r\n\r\nexport function ReportReviewArea ({navigation, route}){\r\n    const {locationId, reviewId} = route.params;\r\n    const [reason, onChangeReason] = React.useState('reason');\r\n    return (\r\n        <View style={style.containerBody}>\r\n            <ButtonTab\r\n            styleContainer={{position:'absolute', top: 20, left: 0}}\r\n            iconName={\"arrow-left-bold\"}\r\n            buttonBackgroundColor={'#FFF'}\r\n            hasShadow={true}\r\n            leftTab={true}\r\n            onPress={() => navigation.goBack()}/>\r\n            <View style={style.containerMain}>\r\n                <View style={style.containerTextInputLabels}>\r\n                    <Text style={style.textLabel}>Reason</Text>\r\n                </View>  \r\n                <FormTextInput \r\n                    value={name}\r\n                    onChangeText={reason => onChangeReason(reason)}\r\n                    constraints={notEmptyCS}/>\r\n                <ButtonPrimary \r\n                    text=\"Report Review\"\r\n                    onPress={() => reportReview(navigation, locationId, reviewId, reason)}/>\r\n            </View>        \r\n        </View>\r\n    );\r\n};","import React from 'react';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport {MainNavigator} from './MainTabNavigator';\r\nimport {SearchLocationsMapArea} from '../areas/SearchLocationsMap';\r\nimport {ViewLocationArea} from '../areas/ViewLocation';\r\nimport {AddReviewArea} from '../areas/AddReview';\r\nimport { ReportLocationArea, ReportReviewArea } from '../areas/Report';\r\nimport {AddLocationFormArea} from '../areas/AddLocationForm';\r\n\r\nconst HomeStack = createStackNavigator();\r\n\r\nexport function HomeNavigator({navigator}){\r\n    return (\r\n        <HomeStack.Navigator headerMode={'none'}>\r\n            <HomeStack.Screen name=\"SearchLocations\" component={MainNavigator}/>\r\n            <HomeStack.Screen name=\"SearchLocationsMap\" component={SearchLocationsMapArea}/>\r\n            <HomeStack.Screen name=\"ViewLocation\" component={ViewLocationArea}/>\r\n            <HomeStack.Screen name=\"ReportLocation\" component={ReportLocationArea}/>\r\n            <HomeStack.Screen name=\"ReportReview\" component={ReportReviewArea}/>\r\n            <HomeStack.Screen name=\"AddReview\" component={AddReviewArea}/>\r\n            <HomeStack.Screen name=\"AddLocationForm\" component={AddLocationFormArea}/>\r\n        </HomeStack.Navigator>\r\n    );\r\n}","import React from 'react';\r\nimport {View, ActivityIndicator, StyleSheet} from 'react-native';\r\n\r\nexport function LoadingIndicator(){\r\n    return (\r\n        <View style={styles.container}>\r\n            <ActivityIndicator size=\"large\" color=\"#0000ff\" />    \r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: \"center\"\r\n    }\r\n});","import * as React from 'react';\r\nimport 'react-native-gesture-handler';\r\nimport {useLinking, NavigationContainer} from '@react-navigation/native';\r\n\r\nimport {LoginNavigator} from './src/navigators/LoginStackNavigator';\r\nimport {HomeNavigator} from './src/navigators/HomeStackNavigator';\r\n\r\nimport {LoadingIndicator} from './src/components/LoadingIndicator';\r\n\r\nimport {graphqlAuth} from './src/graphql/graphqlService';\r\nimport {createVerifyAuthenticationBody} from './src/graphql/queries';\r\n\r\nimport {getUserAuth, removeUserAuth} from './src/graphql/sessionData';\r\nimport {AuthContext} from './src/context/Authentication';\r\n\r\nimport {Linking} from 'expo';\r\n\r\nconst prefix = Linking.makeUrl('/');\r\n\r\nexport default function App() {  \r\n  const ref = React.useRef();\r\n  const { getInitialState } = useLinking(ref, {\r\n    prefixes: [prefix]\r\n  });\r\n\r\n  const [isReady, setIsReady] = React.useState(false);\r\n  const [initialState, setInitialState] = React.useState();\r\n\r\n  const [state, dispatch] = React.useReducer(\r\n    (prevState, action) => {\r\n      switch (action.type) {\r\n        case 'LOGIN':\r\n          return {\r\n            userToken: action.token,\r\n            isLoading: false,\r\n          };\r\n        case 'VERIFY_ATTEMPTED':\r\n          return {\r\n            ... prevState,\r\n            isLoading: false,\r\n          };\r\n        case 'LOGOUT':\r\n          return {\r\n            userToken: null,\r\n            isLoading: false,\r\n          };\r\n      }\r\n    },\r\n    {\r\n      userToken: null,\r\n      isLoading: true,\r\n    }\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    getUserAuth()\r\n    .then(token => {\r\n      if(token !== null) {\r\n        let body = createVerifyAuthenticationBody();\r\n        graphqlAuth(token, body).then(\r\n          (result) => {\r\n            if(result.data !== null){\r\n              dispatch({ type: 'LOGIN', token: token });\r\n            } else {\r\n              dispatch({ type: 'VERIFY_ATTEMPTED'})\r\n            }\r\n          },\r\n          () => {\r\n            dispatch({ type: 'VERIFY_ATTEMPTED'})\r\n          }\r\n        );\r\n      } else {\r\n        dispatch({ type: 'VERIFY_ATTEMPTED'});\r\n      }    \r\n    });\r\n  }, [getUserAuth]);\r\n  \r\n  const authContext = React.useMemo(() => ({\r\n      login: () => {\r\n        getUserAuth()\r\n          .then(token => {\r\n            if(token !== null) {\r\n              dispatch({ type: 'LOGIN', token: token });\r\n            }    \r\n          });\r\n      },\r\n      logout: () => {\r\n        removeUserAuth()\r\n          .then(() => {dispatch({ type: 'LOGOUT' });});\r\n      }}),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    getInitialState()\r\n      .catch(() => {})\r\n      .then(result => {\r\n        if (result !== undefined) {\r\n          //do nothing\r\n        }\r\n        setIsReady(true);\r\n      });\r\n  }, [getInitialState]);\r\n\r\n  if(state.isLoading === true || !isReady){\r\n    return <LoadingIndicator/>\r\n  }\r\n\r\n  return(\r\n    <AuthContext.Provider value={authContext}>\r\n      {\r\n        (<NavigationContainer linking={initialState} ref={ref} fallback={<LoadingIndicator/>}>    \r\n          {state.userToken == null ? (<LoginNavigator/>) : (<HomeNavigator/>)}\r\n        </NavigationContainer>)\r\n      }\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}